apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
      kubernetes.io/metadata.name: knative-serving
    name: knative-serving
    resourceVersion: "947"
    uid: bf1da2f3-1795-4c04-8811-1e589c01e946
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # The Revision ContainerConcurrency field specifies the maximum number
      # of requests the Container can handle at once. Container concurrency
      # target percentage is how much of that maximum to use in a stable
      # state. E.g. if a Revision specifies ContainerConcurrency of 10, then
      # the Autoscaler will try to maintain 7 concurrent connections per pod
      # on average.
      # Note: this limit will be applied to container concurrency set at every
      # level (ConfigMap, Revision Spec or Annotation).
      # For legacy and backwards compatibility reasons, this value also accepts
      # fractional values in (0, 1] interval (i.e. 0.7 â‡’ 70%).
      # Thus minimal percentage value must be greater than 1.0, or it will be
      # treated as a fraction.
      # NOTE: that this value does not affect actual number of concurrent requests
      #       the user container may receive, but only the average number of requests
      #       that the revision pods will receive.
      container-concurrency-target-percentage: "70"

      # The container concurrency target default is what the Autoscaler will
      # try to maintain when concurrency is used as the scaling metric for the
      # Revision and the Revision specifies unlimited concurrency.
      # When revision explicitly specifies container concurrency, that value
      # will be used as a scaling target for autoscaler.
      # When specifying unlimited concurrency, the autoscaler will
      # horizontally scale the application based on this target concurrency.
      # This is what we call "soft limit" in the documentation, i.e. it only
      # affects number of pods and does not affect the number of requests
      # individual pod processes.
      # The value must be a positive number such that the value multiplied
      # by container-concurrency-target-percentage is greater than 0.01.
      # NOTE: that this value will be adjusted by application of
      #       container-concurrency-target-percentage, i.e. by default
      #       the system will target on average 70 concurrent requests
      #       per revision pod.
      # NOTE: Only one metric can be used for autoscaling a Revision.
      container-concurrency-target-default: "100"

      # The requests per second (RPS) target default is what the Autoscaler will
      # try to maintain when RPS is used as the scaling metric for a Revision and
      # the Revision specifies unlimited RPS. Even when specifying unlimited RPS,
      # the autoscaler will horizontally scale the application based on this
      # target RPS.
      # Must be greater than 1.0.
      # NOTE: Only one metric can be used for autoscaling a Revision.
      requests-per-second-target-default: "200"

      # The target burst capacity specifies the size of burst in concurrent
      # requests that the system operator expects the system will receive.
      # Autoscaler will try to protect the system from queueing by introducing
      # Activator in the request path if the current spare capacity of the
      # service is less than this setting.
      # If this setting is 0, then Activator will be in the request path only
      # when the revision is scaled to 0.
      # If this setting is > 0 and container-concurrency-target-percentage is
      # 100% or 1.0, then activator will always be in the request path.
      # -1 denotes unlimited target-burst-capacity and activator will always
      # be in the request path.
      # Other negative values are invalid.
      target-burst-capacity: "211"

      # When operating in a stable mode, the autoscaler operates on the
      # average concurrency over the stable window.
      # Stable window must be in whole seconds.
      stable-window: "60s"

      # When observed average concurrency during the panic window reaches
      # panic-threshold-percentage the target concurrency, the autoscaler
      # enters panic mode. When operating in panic mode, the autoscaler
      # scales on the average concurrency over the panic window which is
      # panic-window-percentage of the stable-window.
      # Must be in the [1, 100] range.
      # When computing the panic window it will be rounded to the closest
      # whole second, at least 1s.
      panic-window-percentage: "10.0"

      # The percentage of the container concurrency target at which to
      # enter panic mode when reached within the panic window.
      panic-threshold-percentage: "200.0"

      # Max scale up rate limits the rate at which the autoscaler will
      # increase pod count. It is the maximum ratio of desired pods versus
      # observed pods.
      # Cannot be less or equal to 1.
      # I.e with value of 2.0 the number of pods can at most go N to 2N
      # over single Autoscaler period (2s), but at least N to
      # N+1, if Autoscaler needs to scale up.
      max-scale-up-rate: "1000.0"

      # Max scale down rate limits the rate at which the autoscaler will
      # decrease pod count. It is the maximum ratio of observed pods versus
      # desired pods.
      # Cannot be less or equal to 1.
      # I.e. with value of 2.0 the number of pods can at most go N to N/2
      # over single Autoscaler evaluation period (2s), but at
      # least N to N-1, if Autoscaler needs to scale down.
      max-scale-down-rate: "2.0"

      # Scale to zero feature flag.
      enable-scale-to-zero: "true"

      # Scale to zero grace period is the time an inactive revision is left
      # running before it is scaled to zero (must be positive, but recommended
      # at least a few seconds if running with mesh networking).
      # This is the upper limit and is provided not to enforce timeout after
      # the revision stopped receiving requests for stable window, but to
      # ensure network reprogramming to put activator in the path has completed.
      # If the system determines that a shorter period is satisfactory,
      # then the system will only wait that amount of time before scaling to 0.
      # NOTE: this period might actually be 0, if activator has been
      # in the request path sufficiently long.
      # If there is necessity for the last pod to linger longer use
      # scale-to-zero-pod-retention-period flag.
      scale-to-zero-grace-period: "30s"

      # Scale to zero pod retention period defines the minimum amount
      # of time the last pod will remain after Autoscaler has decided to
      # scale to zero.
      # This flag is for the situations where the pod startup is very expensive
      # and the traffic is bursty (requiring smaller windows for fast action),
      # but patchy.
      # The larger of this flag and `scale-to-zero-grace-period` will effectively
      # determine how the last pod will hang around.
      scale-to-zero-pod-retention-period: "0s"

      # pod-autoscaler-class specifies the default pod autoscaler class
      # that should be used if none is specified. If omitted,
      # the Knative Pod Autoscaler (KPA) is used by default.
      pod-autoscaler-class: "kpa.autoscaling.knative.dev"

      # The capacity of a single activator task.
      # The `unit` is one concurrent request proxied by the activator.
      # activator-capacity must be at least 1.
      # This value is used for computation of the Activator subset size.
      # See the algorithm here: http://bit.ly/38XiCZ3.
      # TODO(vagababov): tune after actual benchmarking.
      activator-capacity: "100.0"

      # initial-scale is the cluster-wide default value for the initial target
      # scale of a revision after creation, unless overridden by the
      # "autoscaling.knative.dev/initialScale" annotation.
      # This value must be greater than 0 unless allow-zero-initial-scale is true.
      initial-scale: "1"

      # allow-zero-initial-scale controls whether either the cluster-wide initial-scale flag,
      # or the "autoscaling.knative.dev/initialScale" annotation, can be set to 0.
      allow-zero-initial-scale: "false"

      # min-scale is the cluster-wide default value for the min scale of a revision,
      # unless overridden by the "autoscaling.knative.dev/minScale" annotation.
      min-scale: "0"

      # max-scale is the cluster-wide default value for the max scale of a revision,
      # unless overridden by the "autoscaling.knative.dev/maxScale" annotation.
      # If set to 0, the revision has no maximum scale.
      max-scale: "0"

      # scale-down-delay is the amount of time that must pass at reduced
      # concurrency before a scale down decision is applied. This can be useful,
      # for example, to maintain replica count and avoid a cold start penalty if
      # more requests come in within the scale down delay period.
      # The default, 0s, imposes no delay at all.
      scale-down-delay: "0s"

      # max-scale-limit sets the maximum permitted value for the max scale of a revision.
      # When this is set to a positive value, a revision with a maxScale above that value
      # (including a maxScale of "0" = unlimited) is disallowed.
      # A value of zero (the default) allows any limit, including unlimited.
      max-scale-limit: "0"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 47c2487f
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# The Revision ContainerConcurrency field specifies the maximum number\n# of requests the Container can handle at once. Container concurrency\n# target percentage is how much of that maximum to use in a stable\n# state. E.g. if a Revision specifies ContainerConcurrency of 10, then\n# the Autoscaler will try to maintain 7 concurrent connections per pod\n# on average.\n# Note: this limit will be applied to container concurrency set at every\n# level (ConfigMap, Revision Spec or Annotation).\n# For legacy and backwards compatibility reasons, this value also accepts\n# fractional values in (0, 1] interval (i.e. 0.7 â‡’ 70%).\n# Thus minimal percentage value must be greater than 1.0, or it will be\n# treated as a fraction.\n# NOTE: that this value does not affect actual number of concurrent requests\n#       the user container may receive, but only the average number of requests\n#       that the revision pods will receive.\ncontainer-concurrency-target-percentage: \"70\"\n\n# The container concurrency target default is what the Autoscaler will\n# try to maintain when concurrency is used as the scaling metric for the\n# Revision and the Revision specifies unlimited concurrency.\n# When revision explicitly specifies container concurrency, that value\n# will be used as a scaling target for autoscaler.\n# When specifying unlimited concurrency, the autoscaler will\n# horizontally scale the application based on this target concurrency.\n# This is what we call \"soft limit\" in the documentation, i.e. it only\n# affects number of pods and does not affect the number of requests\n# individual pod processes.\n# The value must be a positive number such that the value multiplied\n# by container-concurrency-target-percentage is greater than 0.01.\n# NOTE: that this value will be adjusted by application of\n#       container-concurrency-target-percentage, i.e. by default\n#       the system will target on average 70 concurrent requests\n#       per revision pod.\n# NOTE: Only one metric can be used for autoscaling a Revision.\ncontainer-concurrency-target-default: \"100\"\n\n# The requests per second (RPS) target default is what the Autoscaler will\n# try to maintain when RPS is used as the scaling metric for a Revision and\n# the Revision specifies unlimited RPS. Even when specifying unlimited RPS,\n# the autoscaler will horizontally scale the application based on this\n# target RPS.\n# Must be greater than 1.0.\n# NOTE: Only one metric can be used for autoscaling a Revision.\nrequests-per-second-target-default: \"200\"\n\n# The target burst capacity specifies the size of burst in concurrent\n# requests that the system operator expects the system will receive.\n# Autoscaler will try to protect the system from queueing by introducing\n# Activator in the request path if the current spare capacity of the\n# service is less than this setting.\n# If this setting is 0, then Activator will be in the request path only\n# when the revision is scaled to 0.\n# If this setting is \u003e 0 and container-concurrency-target-percentage is\n# 100% or 1.0, then activator will always be in the request path.\n# -1 denotes unlimited target-burst-capacity and activator will always\n# be in the request path.\n# Other negative values are invalid.\ntarget-burst-capacity: \"211\"\n\n# When operating in a stable mode, the autoscaler operates on the\n# average concurrency over the stable window.\n# Stable window must be in whole seconds.\nstable-window: \"60s\"\n\n# When observed average concurrency during the panic window reaches\n# panic-threshold-percentage the target concurrency, the autoscaler\n# enters panic mode. When operating in panic mode, the autoscaler\n# scales on the average concurrency over the panic window which is\n# panic-window-percentage of the stable-window.\n# Must be in the [1, 100] range.\n# When computing the panic window it will be rounded to the closest\n# whole second, at least 1s.\npanic-window-percentage: \"10.0\"\n\n# The percentage of the container concurrency target at which to\n# enter panic mode when reached within the panic window.\npanic-threshold-percentage: \"200.0\"\n\n# Max scale up rate limits the rate at which the autoscaler will\n# increase pod count. It is the maximum ratio of desired pods versus\n# observed pods.\n# Cannot be less or equal to 1.\n# I.e with value of 2.0 the number of pods can at most go N to 2N\n# over single Autoscaler period (2s), but at least N to\n# N+1, if Autoscaler needs to scale up.\nmax-scale-up-rate: \"1000.0\"\n\n# Max scale down rate limits the rate at which the autoscaler will\n# decrease pod count. It is the maximum ratio of observed pods versus\n# desired pods.\n# Cannot be less or equal to 1.\n# I.e. with value of 2.0 the number of pods can at most go N to N/2\n# over single Autoscaler evaluation period (2s), but at\n# least N to N-1, if Autoscaler needs to scale down.\nmax-scale-down-rate: \"2.0\"\n\n# Scale to zero feature flag.\nenable-scale-to-zero: \"true\"\n\n# Scale to zero grace period is the time an inactive revision is left\n# running before it is scaled to zero (must be positive, but recommended\n# at least a few seconds if running with mesh networking).\n# This is the upper limit and is provided not to enforce timeout after\n# the revision stopped receiving requests for stable window, but to\n# ensure network reprogramming to put activator in the path has completed.\n# If the system determines that a shorter period is satisfactory,\n# then the system will only wait that amount of time before scaling to 0.\n# NOTE: this period might actually be 0, if activator has been\n# in the request path sufficiently long.\n# If there is necessity for the last pod to linger longer use\n# scale-to-zero-pod-retention-period flag.\nscale-to-zero-grace-period: \"30s\"\n\n# Scale to zero pod retention period defines the minimum amount\n# of time the last pod will remain after Autoscaler has decided to\n# scale to zero.\n# This flag is for the situations where the pod startup is very expensive\n# and the traffic is bursty (requiring smaller windows for fast action),\n# but patchy.\n# The larger of this flag and `scale-to-zero-grace-period` will effectively\n# determine how the last pod will hang around.\nscale-to-zero-pod-retention-period: \"0s\"\n\n# pod-autoscaler-class specifies the default pod autoscaler class\n# that should be used if none is specified. If omitted,\n# the Knative Pod Autoscaler (KPA) is used by default.\npod-autoscaler-class: \"kpa.autoscaling.knative.dev\"\n\n# The capacity of a single activator task.\n# The `unit` is one concurrent request proxied by the activator.\n# activator-capacity must be at least 1.\n# This value is used for computation of the Activator subset size.\n# See the algorithm here: http://bit.ly/38XiCZ3.\n# TODO(vagababov): tune after actual benchmarking.\nactivator-capacity: \"100.0\"\n\n# initial-scale is the cluster-wide default value for the initial target\n# scale of a revision after creation, unless overridden by the\n# \"autoscaling.knative.dev/initialScale\" annotation.\n# This value must be greater than 0 unless allow-zero-initial-scale is true.\ninitial-scale: \"1\"\n\n# allow-zero-initial-scale controls whether either the cluster-wide initial-scale flag,\n# or the \"autoscaling.knative.dev/initialScale\" annotation, can be set to 0.\nallow-zero-initial-scale: \"false\"\n\n# min-scale is the cluster-wide default value for the min scale of a revision,\n# unless overridden by the \"autoscaling.knative.dev/minScale\" annotation.\nmin-scale: \"0\"\n\n# max-scale is the cluster-wide default value for the max scale of a revision,\n# unless overridden by the \"autoscaling.knative.dev/maxScale\" annotation.\n# If set to 0, the revision has no maximum scale.\nmax-scale: \"0\"\n\n# scale-down-delay is the amount of time that must pass at reduced\n# concurrency before a scale down decision is applied. This can be useful,\n# for example, to maintain replica count and avoid a cold start penalty if\n# more requests come in within the scale down delay period.\n# The default, 0s, imposes no delay at all.\nscale-down-delay: \"0s\"\n\n# max-scale-limit sets the maximum permitted value for the max scale of a revision.\n# When this is set to a positive value, a revision with a maxScale above that value\n# (including a maxScale of \"0\" = unlimited) is disallowed.\n# A value of zero (the default) allows any limit, including unlimited.\nmax-scale-limit: \"0\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"47c2487f"},"labels":{"app.kubernetes.io/component":"autoscaler","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-autoscaler","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: autoscaler
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-autoscaler
    namespace: knative-serving
    resourceVersion: "978"
    uid: 0e87706e-76bf-4cc4-aef9-d33400d4ba40
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # revision-timeout-seconds contains the default number of
      # seconds to use for the revision's per-request timeout, if
      # none is specified.
      revision-timeout-seconds: "300"  # 5 minutes

      # max-revision-timeout-seconds contains the maximum number of
      # seconds that can be used for revision-timeout-seconds.
      # This value must be greater than or equal to revision-timeout-seconds.
      # If omitted, the system default is used (600 seconds).
      #
      # If this value is increased, the activator's terminationGracePeriodSeconds
      # should also be increased to prevent in-flight requests being disrupted.
      max-revision-timeout-seconds: "600"  # 10 minutes

      # revision-response-start-timeout-seconds contains the default number of
      # seconds a request will be allowed to stay open while waiting to
      # receive any bytes from the user's application, if none is specified.
      #
      # This defaults to 'revision-timeout-seconds'
      revision-response-start-timeout-seconds: "300"

      # revision-idle-timeout-seconds contains the default number of
      # seconds a request will be allowed to stay open while not receiving any
      # bytes from the user's application, if none is specified.
      revision-idle-timeout-seconds: "0"  # infinite

      # revision-cpu-request contains the cpu allocation to assign
      # to revisions by default.  If omitted, no value is specified
      # and the system default is used.
      # Below is an example of setting revision-cpu-request.
      # By default, it is not set by Knative.
      revision-cpu-request: "400m"  # 0.4 of a CPU (aka 400 milli-CPU)

      # revision-memory-request contains the memory allocation to assign
      # to revisions by default.  If omitted, no value is specified
      # and the system default is used.
      # Below is an example of setting revision-memory-request.
      # By default, it is not set by Knative.
      revision-memory-request: "100M"  # 100 megabytes of memory

      # revision-ephemeral-storage-request contains the ephemeral storage
      # allocation to assign to revisions by default.  If omitted, no value is
      # specified and the system default is used.
      revision-ephemeral-storage-request: "500M"  # 500 megabytes of storage

      # revision-cpu-limit contains the cpu allocation to limit
      # revisions to by default.  If omitted, no value is specified
      # and the system default is used.
      # Below is an example of setting revision-cpu-limit.
      # By default, it is not set by Knative.
      revision-cpu-limit: "1000m"  # 1 CPU (aka 1000 milli-CPU)

      # revision-memory-limit contains the memory allocation to limit
      # revisions to by default.  If omitted, no value is specified
      # and the system default is used.
      # Below is an example of setting revision-memory-limit.
      # By default, it is not set by Knative.
      revision-memory-limit: "200M"  # 200 megabytes of memory

      # revision-ephemeral-storage-limit contains the ephemeral storage
      # allocation to limit revisions to by default.  If omitted, no value is
      # specified and the system default is used.
      revision-ephemeral-storage-limit: "750M"  # 750 megabytes of storage

      # container-name-template contains a template for the default
      # container name, if none is specified.  This field supports
      # Go templating and is supplied with the ObjectMeta of the
      # enclosing Service or Configuration, so values such as
      # {{.Name}} are also valid.
      container-name-template: "user-container"

      # init-container-name-template contains a template for the default
      # init container name, if none is specified.  This field supports
      # Go templating and is supplied with the ObjectMeta of the
      # enclosing Service or Configuration, so values such as
      # {{.Name}} are also valid.
      init-container-name-template: "init-container"

      # container-concurrency specifies the maximum number
      # of requests the Container can handle at once, and requests
      # above this threshold are queued.  Setting a value of zero
      # disables this throttling and lets through as many requests as
      # the pod receives.
      container-concurrency: "0"

      # The container concurrency max limit is an operator setting ensuring that
      # the individual revisions cannot have arbitrary large concurrency
      # values, or autoscaling targets. `container-concurrency` default setting
      # must be at or below this value.
      #
      # Must be greater than 1.
      #
      # Note: even with this set, a user can choose a containerConcurrency
      # of 0 (i.e. unbounded) unless allow-container-concurrency-zero is
      # set to "false".
      container-concurrency-max-limit: "1000"

      # allow-container-concurrency-zero controls whether users can
      # specify 0 (i.e. unbounded) for containerConcurrency.
      allow-container-concurrency-zero: "true"

      # enable-service-links specifies the default value used for the
      # enableServiceLinks field of the PodSpec, when it is omitted by the user.
      # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
      #
      # This is a tri-state flag with possible values of (true|false|default).
      #
      # In environments with large number of services it is suggested
      # to set this value to `false`.
      # See https://github.com/knative/serving/issues/8498.
      enable-service-links: "false"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 5b64ff5c
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# revision-timeout-seconds contains the default number of\n# seconds to use for the revision's per-request timeout, if\n# none is specified.\nrevision-timeout-seconds: \"300\"  # 5 minutes\n\n# max-revision-timeout-seconds contains the maximum number of\n# seconds that can be used for revision-timeout-seconds.\n# This value must be greater than or equal to revision-timeout-seconds.\n# If omitted, the system default is used (600 seconds).\n#\n# If this value is increased, the activator's terminationGracePeriodSeconds\n# should also be increased to prevent in-flight requests being disrupted.\nmax-revision-timeout-seconds: \"600\"  # 10 minutes\n\n# revision-response-start-timeout-seconds contains the default number of\n# seconds a request will be allowed to stay open while waiting to\n# receive any bytes from the user's application, if none is specified.\n#\n# This defaults to 'revision-timeout-seconds'\nrevision-response-start-timeout-seconds: \"300\"\n\n# revision-idle-timeout-seconds contains the default number of\n# seconds a request will be allowed to stay open while not receiving any\n# bytes from the user's application, if none is specified.\nrevision-idle-timeout-seconds: \"0\"  # infinite\n\n# revision-cpu-request contains the cpu allocation to assign\n# to revisions by default.  If omitted, no value is specified\n# and the system default is used.\n# Below is an example of setting revision-cpu-request.\n# By default, it is not set by Knative.\nrevision-cpu-request: \"400m\"  # 0.4 of a CPU (aka 400 milli-CPU)\n\n# revision-memory-request contains the memory allocation to assign\n# to revisions by default.  If omitted, no value is specified\n# and the system default is used.\n# Below is an example of setting revision-memory-request.\n# By default, it is not set by Knative.\nrevision-memory-request: \"100M\"  # 100 megabytes of memory\n\n# revision-ephemeral-storage-request contains the ephemeral storage\n# allocation to assign to revisions by default.  If omitted, no value is\n# specified and the system default is used.\nrevision-ephemeral-storage-request: \"500M\"  # 500 megabytes of storage\n\n# revision-cpu-limit contains the cpu allocation to limit\n# revisions to by default.  If omitted, no value is specified\n# and the system default is used.\n# Below is an example of setting revision-cpu-limit.\n# By default, it is not set by Knative.\nrevision-cpu-limit: \"1000m\"  # 1 CPU (aka 1000 milli-CPU)\n\n# revision-memory-limit contains the memory allocation to limit\n# revisions to by default.  If omitted, no value is specified\n# and the system default is used.\n# Below is an example of setting revision-memory-limit.\n# By default, it is not set by Knative.\nrevision-memory-limit: \"200M\"  # 200 megabytes of memory\n\n# revision-ephemeral-storage-limit contains the ephemeral storage\n# allocation to limit revisions to by default.  If omitted, no value is\n# specified and the system default is used.\nrevision-ephemeral-storage-limit: \"750M\"  # 750 megabytes of storage\n\n# container-name-template contains a template for the default\n# container name, if none is specified.  This field supports\n# Go templating and is supplied with the ObjectMeta of the\n# enclosing Service or Configuration, so values such as\n# {{.Name}} are also valid.\ncontainer-name-template: \"user-container\"\n\n# init-container-name-template contains a template for the default\n# init container name, if none is specified.  This field supports\n# Go templating and is supplied with the ObjectMeta of the\n# enclosing Service or Configuration, so values such as\n# {{.Name}} are also valid.\ninit-container-name-template: \"init-container\"\n\n# container-concurrency specifies the maximum number\n# of requests the Container can handle at once, and requests\n# above this threshold are queued.  Setting a value of zero\n# disables this throttling and lets through as many requests as\n# the pod receives.\ncontainer-concurrency: \"0\"\n\n# The container concurrency max limit is an operator setting ensuring that\n# the individual revisions cannot have arbitrary large concurrency\n# values, or autoscaling targets. `container-concurrency` default setting\n# must be at or below this value.\n#\n# Must be greater than 1.\n#\n# Note: even with this set, a user can choose a containerConcurrency\n# of 0 (i.e. unbounded) unless allow-container-concurrency-zero is\n# set to \"false\".\ncontainer-concurrency-max-limit: \"1000\"\n\n# allow-container-concurrency-zero controls whether users can\n# specify 0 (i.e. unbounded) for containerConcurrency.\nallow-container-concurrency-zero: \"true\"\n\n# enable-service-links specifies the default value used for the\n# enableServiceLinks field of the PodSpec, when it is omitted by the user.\n# See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service\n#\n# This is a tri-state flag with possible values of (true|false|default).\n#\n# In environments with large number of services it is suggested\n# to set this value to `false`.\n# See https://github.com/knative/serving/issues/8498.\nenable-service-links: \"false\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"5b64ff5c"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-defaults","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-defaults
    namespace: knative-serving
    resourceVersion: "979"
    uid: fcfa20c2-5e9a-4bcb-a5d9-25c5ca0a2412
- apiVersion: v1
  data:
    _example: |-
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # List of repositories for which tag to digest resolving should be skipped
      registries-skipping-tag-resolving: "kind.local,ko.local,dev.local"

      # Maximum time allowed for an image's digests to be resolved.
      digest-resolution-timeout: "10s"

      # Duration we wait for the deployment to be ready before considering it failed.
      progress-deadline: "600s"

      # Sets the queue proxy's CPU request.
      # If omitted, a default value (currently "25m"), is used.
      queue-sidecar-cpu-request: "25m"

      # Sets the queue proxy's CPU limit.
      # If omitted, a default value (currently "1000m"), is used when
      # `queueproxy.resource-defaults` is set to `Enabled`.
      queue-sidecar-cpu-limit: "1000m"

      # Sets the queue proxy's memory request.
      # If omitted, a default value (currently "400Mi"), is used when
      # `queueproxy.resource-defaults` is set to `Enabled`.
      queue-sidecar-memory-request: "400Mi"

      # Sets the queue proxy's memory limit.
      # If omitted, a default value (currently "800Mi"), is used when
      # `queueproxy.resource-defaults` is set to `Enabled`.
      queue-sidecar-memory-limit: "800Mi"

      # Sets the queue proxy's ephemeral storage request.
      # If omitted, no value is specified and the system default is used.
      queue-sidecar-ephemeral-storage-request: "512Mi"

      # Sets the queue proxy's ephemeral storage limit.
      # If omitted, no value is specified and the system default is used.
      queue-sidecar-ephemeral-storage-limit: "1024Mi"

      # Sets tokens associated with specific audiences for queue proxy - used by QPOptions
      #
      # For example, to add the `service-x` audience:
      #    queue-sidecar-token-audiences: "service-x"
      # Also supports a list of audiences, for example:
      #    queue-sidecar-token-audiences: "service-x,service-y"
      # If omitted, or empty, no tokens are created
      queue-sidecar-token-audiences: ""

      # Sets rootCA for the queue proxy - used by QPOptions
      # If omitted, or empty, no rootCA is added to the golang rootCAs
      queue-sidecar-rootca: ""
    queue-sidecar-image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:a2d67c5fba7f9f1c84329833be1a7b7d824b3d6f954c9efcb0ddb061cd00521c
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: ed77183a
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# List of repositories for which tag to digest resolving should be skipped\nregistries-skipping-tag-resolving: \"kind.local,ko.local,dev.local\"\n\n# Maximum time allowed for an image's digests to be resolved.\ndigest-resolution-timeout: \"10s\"\n\n# Duration we wait for the deployment to be ready before considering it failed.\nprogress-deadline: \"600s\"\n\n# Sets the queue proxy's CPU request.\n# If omitted, a default value (currently \"25m\"), is used.\nqueue-sidecar-cpu-request: \"25m\"\n\n# Sets the queue proxy's CPU limit.\n# If omitted, a default value (currently \"1000m\"), is used when\n# `queueproxy.resource-defaults` is set to `Enabled`.\nqueue-sidecar-cpu-limit: \"1000m\"\n\n# Sets the queue proxy's memory request.\n# If omitted, a default value (currently \"400Mi\"), is used when\n# `queueproxy.resource-defaults` is set to `Enabled`.\nqueue-sidecar-memory-request: \"400Mi\"\n\n# Sets the queue proxy's memory limit.\n# If omitted, a default value (currently \"800Mi\"), is used when\n# `queueproxy.resource-defaults` is set to `Enabled`.\nqueue-sidecar-memory-limit: \"800Mi\"\n\n# Sets the queue proxy's ephemeral storage request.\n# If omitted, no value is specified and the system default is used.\nqueue-sidecar-ephemeral-storage-request: \"512Mi\"\n\n# Sets the queue proxy's ephemeral storage limit.\n# If omitted, no value is specified and the system default is used.\nqueue-sidecar-ephemeral-storage-limit: \"1024Mi\"\n\n# Sets tokens associated with specific audiences for queue proxy - used by QPOptions\n#\n# For example, to add the `service-x` audience:\n#    queue-sidecar-token-audiences: \"service-x\"\n# Also supports a list of audiences, for example:\n#    queue-sidecar-token-audiences: \"service-x,service-y\"\n# If omitted, or empty, no tokens are created\nqueue-sidecar-token-audiences: \"\"\n\n# Sets rootCA for the queue proxy - used by QPOptions\n# If omitted, or empty, no rootCA is added to the golang rootCAs\nqueue-sidecar-rootca: \"\"","queue-sidecar-image":"gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:a2d67c5fba7f9f1c84329833be1a7b7d824b3d6f954c9efcb0ddb061cd00521c"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"ed77183a"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-deployment","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-deployment
    namespace: knative-serving
    resourceVersion: "980"
    uid: d2bdb333-ce3e-4c98-a459-922994f4684b
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # Default value for domain.
      # Routes having the cluster domain suffix (by default 'svc.cluster.local')
      # will not be exposed through Ingress. You can define your own label
      # selector to assign that domain suffix to your Route here, or you can set
      # the label
      #    "networking.knative.dev/visibility=cluster-local"
      # to achieve the same effect.  This shows how to make routes having
      # the label app=secret only exposed to the local cluster.
      svc.cluster.local: |
        selector:
          app: secret

      # These are example settings of domain.
      # example.com will be used for all routes, but it is the least-specific rule so it
      # will only be used if no other domain matches.
      example.com: |

      # example.org will be used for routes having app=nonprofit.
      example.org: |
        selector:
          app: nonprofit
    example.com: ""
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 26c09de5
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# Default value for domain.\n# Routes having the cluster domain suffix (by default 'svc.cluster.local')\n# will not be exposed through Ingress. You can define your own label\n# selector to assign that domain suffix to your Route here, or you can set\n# the label\n#    \"networking.knative.dev/visibility=cluster-local\"\n# to achieve the same effect.  This shows how to make routes having\n# the label app=secret only exposed to the local cluster.\nsvc.cluster.local: |\n  selector:\n    app: secret\n\n# These are example settings of domain.\n# example.com will be used for all routes, but it is the least-specific rule so it\n# will only be used if no other domain matches.\nexample.com: |\n\n# example.org will be used for routes having app=nonprofit.\nexample.org: |\n  selector:\n    app: nonprofit\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"26c09de5"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-domain","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-domain
    namespace: knative-serving
    resourceVersion: "1347"
    uid: 2f8e7ba0-89be-4f09-a61f-12ed07bb79aa
- apiVersion: v1
  data:
    _example: |-
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # Default SecurityContext settings to secure-by-default values
      # if unset.
      #
      # This value will default to "enabled" in a future release,
      # probably Knative 1.10
      secure-pod-defaults: "disabled"

      # Indicates whether multi container support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/configuration/feature-flags/#multiple-containers
      multi-container: "enabled"

      # Indicates whether multi container probing is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/configuration/feature-flags/#multiple-container-probing
      multi-container-probing: "disabled"

      # Indicates whether Kubernetes affinity support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-affinity
      kubernetes.podspec-affinity: "disabled"

      # Indicates whether Kubernetes topologySpreadConstraints support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-topology-spread-constraints
      kubernetes.podspec-topologyspreadconstraints: "disabled"

      # Indicates whether Kubernetes hostAliases support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-host-aliases
      kubernetes.podspec-hostaliases: "disabled"

      # Indicates whether Kubernetes nodeSelector support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-selector
      kubernetes.podspec-nodeselector: "disabled"

      # Indicates whether Kubernetes tolerations support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-toleration
      kubernetes.podspec-tolerations: "disabled"

      # Indicates whether Kubernetes FieldRef support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-fieldref
      kubernetes.podspec-fieldref: "disabled"

      # Indicates whether Kubernetes RuntimeClassName support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-runtime-class
      kubernetes.podspec-runtimeclassname: "disabled"

      # Indicates whether Kubernetes DNSPolicy support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dnspolicy
      kubernetes.podspec-dnspolicy: "disabled"

      # Indicates whether Kubernetes DNSConfig support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dnsconfig
      kubernetes.podspec-dnsconfig: "disabled"

      # This feature allows end-users to set a subset of fields on the Pod's SecurityContext
      #
      # When set to "enabled" or "allowed" it allows the following
      # PodSecurityContext properties:
      # - FSGroup
      # - RunAsGroup
      # - RunAsNonRoot
      # - SupplementalGroups
      # - RunAsUser
      # - SeccompProfile
      #
      # This feature flag should be used with caution as the PodSecurityContext
      # properties may have a side-effect on non-user sidecar containers that come
      # from Knative or your service mesh
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-security-context
      kubernetes.podspec-securitycontext: "disabled"

      # Indicated whether sharing the process namespace via ShareProcessNamespace pod spec is allowed.
      # This can be especially useful for sharing data from images directly between sidecars
      #
      # See: https://knative.dev/docs/serving/configuration/feature-flags/#kubernetes-share-process-namespace
      kubernetes.podspec-shareprocessnamespace: "disabled"

      # Indicates whether Kubernetes PriorityClassName support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-priority-class-name
      kubernetes.podspec-priorityclassname: "disabled"

      # Indicates whether Kubernetes SchedulerName support is enabled
      #
      # WARNING: Cannot safely be disabled once enabled.
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-scheduler-name
      kubernetes.podspec-schedulername: "disabled"

      # This feature flag allows end-users to add a subset of capabilities on the Pod's SecurityContext.
      #
      # When set to "enabled" or "allowed" it allows capabilities to be added to the container.
      # For a list of possible capabilities, see https://man7.org/linux/man-pages/man7/capabilities.7.html
      kubernetes.containerspec-addcapabilities: "disabled"

      # This feature validates PodSpecs from the validating webhook
      # against the K8s API Server.
      #
      # When "enabled", the server will always run the extra validation.
      # When "allowed", the server will not run the dry-run validation by default.
      #   However, clients may enable the behavior on an individual Service by
      #   attaching the following metadata annotation: "features.knative.dev/podspec-dryrun":"enabled".
      # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dry-run
      kubernetes.podspec-dryrun: "allowed"

      # Controls whether tag header based routing feature are enabled or not.
      # 1. Enabled: enabling tag header based routing
      # 2. Disabled: disabling tag header based routing
      # See: https://knative.dev/docs/serving/feature-flags/#tag-header-based-routing
      tag-header-based-routing: "disabled"

      # Controls whether http2 auto-detection should be enabled or not.
      # 1. Enabled: http2 connection will be attempted via upgrade.
      # 2. Disabled: http2 connection will only be attempted when port name is set to "h2c".
      autodetect-http2: "disabled"

      # Controls whether volume support for EmptyDir is enabled or not.
      # 1. Enabled: enabling EmptyDir volume support
      # 2. Disabled: disabling EmptyDir volume support
      kubernetes.podspec-volumes-emptydir: "enabled"

      # Controls whether init containers support is enabled or not.
      # 1. Enabled: enabling init containers support
      # 2. Disabled: disabling init containers support
      kubernetes.podspec-init-containers: "disabled"

      # Controls whether persistent volume claim support is enabled or not.
      # 1. Enabled: enabling persistent volume claim support
      # 2. Disabled: disabling persistent volume claim support
      kubernetes.podspec-persistent-volume-claim: "disabled"

      # Controls whether write access for persistent volumes is enabled or not.
      # 1. Enabled: enabling write access for persistent volumes
      # 2. Disabled: disabling write access for persistent volumes
      kubernetes.podspec-persistent-volume-write: "disabled"

      # Controls if the queue proxy podInfo feature is enabled, allowed or disabled
      #
      # This feature should be enabled/allowed when using queue proxy Options (Extensions)
      # Enabling will mount a podInfo volume to the queue proxy container.
      # The volume will contains an 'annotations' file (from the pod's annotation field).
      # The annotations in this file include the Service annotations set by the client creating the service.
      # If mounted, the annotations can be accessed by queue proxy extensions at /etc/podinfo/annnotations
      #
      # 1. "enabled": always mount a podInfo volume
      # 2. "disabled": never mount a podInfo volume
      # 3. "allowed": by default, do not mount a podInfo volume
      #   However, a client may mount the podInfo volume on an individual Service by attaching
      #   the following metadata annotation to the Service: "features.knative.dev/queueproxy-podinfo":"enabled".
      #
      # NOTE THAT THIS IS AN EXPERIMENTAL / ALPHA FEATURE
      queueproxy.mount-podinfo: "disabled"

      # Default queue proxy resource requests and limits to good values for most cases if set.
      queueproxy.resource-defaults: "disabled"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 632d47dd
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# Default SecurityContext settings to secure-by-default values\n# if unset.\n#\n# This value will default to \"enabled\" in a future release,\n# probably Knative 1.10\nsecure-pod-defaults: \"disabled\"\n\n# Indicates whether multi container support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/configuration/feature-flags/#multiple-containers\nmulti-container: \"enabled\"\n\n# Indicates whether multi container probing is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/configuration/feature-flags/#multiple-container-probing\nmulti-container-probing: \"disabled\"\n\n# Indicates whether Kubernetes affinity support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-affinity\nkubernetes.podspec-affinity: \"disabled\"\n\n# Indicates whether Kubernetes topologySpreadConstraints support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-topology-spread-constraints\nkubernetes.podspec-topologyspreadconstraints: \"disabled\"\n\n# Indicates whether Kubernetes hostAliases support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-host-aliases\nkubernetes.podspec-hostaliases: \"disabled\"\n\n# Indicates whether Kubernetes nodeSelector support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-selector\nkubernetes.podspec-nodeselector: \"disabled\"\n\n# Indicates whether Kubernetes tolerations support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-toleration\nkubernetes.podspec-tolerations: \"disabled\"\n\n# Indicates whether Kubernetes FieldRef support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-fieldref\nkubernetes.podspec-fieldref: \"disabled\"\n\n# Indicates whether Kubernetes RuntimeClassName support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-runtime-class\nkubernetes.podspec-runtimeclassname: \"disabled\"\n\n# Indicates whether Kubernetes DNSPolicy support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dnspolicy\nkubernetes.podspec-dnspolicy: \"disabled\"\n\n# Indicates whether Kubernetes DNSConfig support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dnsconfig\nkubernetes.podspec-dnsconfig: \"disabled\"\n\n# This feature allows end-users to set a subset of fields on the Pod's SecurityContext\n#\n# When set to \"enabled\" or \"allowed\" it allows the following\n# PodSecurityContext properties:\n# - FSGroup\n# - RunAsGroup\n# - RunAsNonRoot\n# - SupplementalGroups\n# - RunAsUser\n# - SeccompProfile\n#\n# This feature flag should be used with caution as the PodSecurityContext\n# properties may have a side-effect on non-user sidecar containers that come\n# from Knative or your service mesh\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-security-context\nkubernetes.podspec-securitycontext: \"disabled\"\n\n# Indicated whether sharing the process namespace via ShareProcessNamespace pod spec is allowed.\n# This can be especially useful for sharing data from images directly between sidecars\n#\n# See: https://knative.dev/docs/serving/configuration/feature-flags/#kubernetes-share-process-namespace\nkubernetes.podspec-shareprocessnamespace: \"disabled\"\n\n# Indicates whether Kubernetes PriorityClassName support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-priority-class-name\nkubernetes.podspec-priorityclassname: \"disabled\"\n\n# Indicates whether Kubernetes SchedulerName support is enabled\n#\n# WARNING: Cannot safely be disabled once enabled.\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-scheduler-name\nkubernetes.podspec-schedulername: \"disabled\"\n\n# This feature flag allows end-users to add a subset of capabilities on the Pod's SecurityContext.\n#\n# When set to \"enabled\" or \"allowed\" it allows capabilities to be added to the container.\n# For a list of possible capabilities, see https://man7.org/linux/man-pages/man7/capabilities.7.html\nkubernetes.containerspec-addcapabilities: \"disabled\"\n\n# This feature validates PodSpecs from the validating webhook\n# against the K8s API Server.\n#\n# When \"enabled\", the server will always run the extra validation.\n# When \"allowed\", the server will not run the dry-run validation by default.\n#   However, clients may enable the behavior on an individual Service by\n#   attaching the following metadata annotation: \"features.knative.dev/podspec-dryrun\":\"enabled\".\n# See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dry-run\nkubernetes.podspec-dryrun: \"allowed\"\n\n# Controls whether tag header based routing feature are enabled or not.\n# 1. Enabled: enabling tag header based routing\n# 2. Disabled: disabling tag header based routing\n# See: https://knative.dev/docs/serving/feature-flags/#tag-header-based-routing\ntag-header-based-routing: \"disabled\"\n\n# Controls whether http2 auto-detection should be enabled or not.\n# 1. Enabled: http2 connection will be attempted via upgrade.\n# 2. Disabled: http2 connection will only be attempted when port name is set to \"h2c\".\nautodetect-http2: \"disabled\"\n\n# Controls whether volume support for EmptyDir is enabled or not.\n# 1. Enabled: enabling EmptyDir volume support\n# 2. Disabled: disabling EmptyDir volume support\nkubernetes.podspec-volumes-emptydir: \"enabled\"\n\n# Controls whether init containers support is enabled or not.\n# 1. Enabled: enabling init containers support\n# 2. Disabled: disabling init containers support\nkubernetes.podspec-init-containers: \"disabled\"\n\n# Controls whether persistent volume claim support is enabled or not.\n# 1. Enabled: enabling persistent volume claim support\n# 2. Disabled: disabling persistent volume claim support\nkubernetes.podspec-persistent-volume-claim: \"disabled\"\n\n# Controls whether write access for persistent volumes is enabled or not.\n# 1. Enabled: enabling write access for persistent volumes\n# 2. Disabled: disabling write access for persistent volumes\nkubernetes.podspec-persistent-volume-write: \"disabled\"\n\n# Controls if the queue proxy podInfo feature is enabled, allowed or disabled\n#\n# This feature should be enabled/allowed when using queue proxy Options (Extensions)\n# Enabling will mount a podInfo volume to the queue proxy container.\n# The volume will contains an 'annotations' file (from the pod's annotation field).\n# The annotations in this file include the Service annotations set by the client creating the service.\n# If mounted, the annotations can be accessed by queue proxy extensions at /etc/podinfo/annnotations\n#\n# 1. \"enabled\": always mount a podInfo volume\n# 2. \"disabled\": never mount a podInfo volume\n# 3. \"allowed\": by default, do not mount a podInfo volume\n#   However, a client may mount the podInfo volume on an individual Service by attaching\n#   the following metadata annotation to the Service: \"features.knative.dev/queueproxy-podinfo\":\"enabled\".\n#\n# NOTE THAT THIS IS AN EXPERIMENTAL / ALPHA FEATURE\nqueueproxy.mount-podinfo: \"disabled\"\n\n# Default queue proxy resource requests and limits to good values for most cases if set.\nqueueproxy.resource-defaults: \"disabled\""},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"632d47dd"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-features","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-features
    namespace: knative-serving
    resourceVersion: "982"
    uid: b2a0fb66-71a6-4719-843c-df9f29e43d89
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # ---------------------------------------
      # Garbage Collector Settings
      # ---------------------------------------
      #
      # Active
      #   * Revisions which are referenced by a Route are considered active.
      #   * Individual revisions may be marked with the annotation
      #      "serving.knative.dev/no-gc":"true" to be permanently considered active.
      #   * Active revisions are not considered for GC.
      # Retention
      #   * Revisions are retained if they are any of the following:
      #       1. Active
      #       2. Were created within "retain-since-create-time"
      #       3. Were last referenced by a route within
      #           "retain-since-last-active-time"
      #       4. There are fewer than "min-non-active-revisions"
      #     If none of these conditions are met, or if the count of revisions exceed
      #      "max-non-active-revisions", they will be deleted by GC.
      #     The special value "disabled" may be used to turn off these limits.
      #
      # Example config to immediately collect any inactive revision:
      #    min-non-active-revisions: "0"
      #    max-non-active-revisions: "0"
      #    retain-since-create-time: "disabled"
      #    retain-since-last-active-time: "disabled"
      #
      # Example config to always keep around the last ten non-active revisions:
      #     retain-since-create-time: "disabled"
      #     retain-since-last-active-time: "disabled"
      #     max-non-active-revisions: "10"
      #
      # Example config to disable all garbage collection:
      #     retain-since-create-time: "disabled"
      #     retain-since-last-active-time: "disabled"
      #     max-non-active-revisions: "disabled"
      #
      # Example config to keep recently deployed or active revisions,
      # always maintain the last two in case of rollback, and prevent
      # burst activity from exploding the count of old revisions:
      #      retain-since-create-time: "48h"
      #      retain-since-last-active-time: "15h"
      #      min-non-active-revisions: "2"
      #      max-non-active-revisions: "1000"

      # Duration since creation before considering a revision for GC or "disabled".
      retain-since-create-time: "48h"

      # Duration since active before considering a revision for GC or "disabled".
      retain-since-last-active-time: "15h"

      # Minimum number of non-active revisions to retain.
      min-non-active-revisions: "20"

      # Maximum number of non-active revisions to retain
      # or "disabled" to disable any maximum limit.
      max-non-active-revisions: "1000"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: aa3813a8
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# ---------------------------------------\n# Garbage Collector Settings\n# ---------------------------------------\n#\n# Active\n#   * Revisions which are referenced by a Route are considered active.\n#   * Individual revisions may be marked with the annotation\n#      \"serving.knative.dev/no-gc\":\"true\" to be permanently considered active.\n#   * Active revisions are not considered for GC.\n# Retention\n#   * Revisions are retained if they are any of the following:\n#       1. Active\n#       2. Were created within \"retain-since-create-time\"\n#       3. Were last referenced by a route within\n#           \"retain-since-last-active-time\"\n#       4. There are fewer than \"min-non-active-revisions\"\n#     If none of these conditions are met, or if the count of revisions exceed\n#      \"max-non-active-revisions\", they will be deleted by GC.\n#     The special value \"disabled\" may be used to turn off these limits.\n#\n# Example config to immediately collect any inactive revision:\n#    min-non-active-revisions: \"0\"\n#    max-non-active-revisions: \"0\"\n#    retain-since-create-time: \"disabled\"\n#    retain-since-last-active-time: \"disabled\"\n#\n# Example config to always keep around the last ten non-active revisions:\n#     retain-since-create-time: \"disabled\"\n#     retain-since-last-active-time: \"disabled\"\n#     max-non-active-revisions: \"10\"\n#\n# Example config to disable all garbage collection:\n#     retain-since-create-time: \"disabled\"\n#     retain-since-last-active-time: \"disabled\"\n#     max-non-active-revisions: \"disabled\"\n#\n# Example config to keep recently deployed or active revisions,\n# always maintain the last two in case of rollback, and prevent\n# burst activity from exploding the count of old revisions:\n#      retain-since-create-time: \"48h\"\n#      retain-since-last-active-time: \"15h\"\n#      min-non-active-revisions: \"2\"\n#      max-non-active-revisions: \"1000\"\n\n# Duration since creation before considering a revision for GC or \"disabled\".\nretain-since-create-time: \"48h\"\n\n# Duration since active before considering a revision for GC or \"disabled\".\nretain-since-last-active-time: \"15h\"\n\n# Minimum number of non-active revisions to retain.\nmin-non-active-revisions: \"20\"\n\n# Maximum number of non-active revisions to retain\n# or \"disabled\" to disable any maximum limit.\nmax-non-active-revisions: \"1000\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"aa3813a8"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-gc","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-gc
    namespace: knative-serving
    resourceVersion: "983"
    uid: 9bb5187d-59a3-4de7-a1b9-6f50b171c712
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.


      # external-gateways defines a gateway and Istio service to serve external traffic.
      # It is the new and preferred way to define the configuration.
      # The format is as follow:
      # ```
      # external-gateways: |
      #   - name: {{gateway_name}}
      #     namespace: {{gateway_namespace}}
      #     service: {{ingress_name}}.{{ingress_namespace}}.svc.cluster.local
      #     labelSelector:
      #       matchExpressions:
      #       - key: {{label_key}}
      #         operator: {{operator}}
      #         values: [{{label_value}}]
      #       matchLabels:
      #         {{label_key}}: {{label_value}}
      # ```
      # name, namespace & service are mandatory and can't be empty. labelSelector is optional.
      # If labelSelector is specified, the external gateway will be used by the knative service with matching labels.
      # See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details about labelSelector.
      # Only one external gateway can be specified without a selector. It will act as the default external gateway.
      external-gateways: |
        - name: knative-ingress-gateway
          namespace: knative-serving
          service: istio-ingressgateway.istio-system.svc.cluster.local
      #
      #
      # The old format has the following pattern:
      # ```
      # gateway.{{gateway_namespace}}.{{gateway_name}}: "{{ingress_name}}.{{ingress_namespace}}.svc.cluster.local"
      # ```
      # Please use the new configuration format `external-gateways` for future compatibility.
      # This configuration will raise an error if either `external-gateways` or `local-gateways` is defined.
      gateway.knative-serving.knative-ingress-gateway: "istio-ingressgateway.istio-system.svc.cluster.local"


      # local-gateways defines a cluster local gateway to allow pods outside of the mesh to access
      # Services and Routes not exposing through an ingress. If the users
      # do have a service mesh setup, this isn't required and can be removed.
      #
      # An example use case is when users want to use Istio without any
      # sidecar injection (like Knative's istio-ci-no-mesh.yaml). Since every pod
      # is outside of the service mesh in that case, a cluster-local service
      # will need to be exposed to a cluster-local gateway to be accessible.
      #
      # It is the new and preferred way to define the configuration.
      # The format is as follow:
      # ```
      # local-gateways: |
      #   - name: {{local_gateway_name}}
      #     namespace: {{local_gateway_namespace}}
      #     service: {{cluster_local_gateway_name}}.{{cluster_local_gateway_namespace}}.svc.cluster.local
      #     labelSelector:
      #       matchExpressions:
      #       - key: {{label_key}}
      #         operator: {{operator}}
      #         values: [{{label_value}}]
      #       matchLabels:
      #         {{label_key}}: {{label_value}}
      # ```
      # name, namespace & service are mandatory and can't be empty. labelSelector is optional.
      # If labelSelector is specified, the local gateway will be used by the knative service with matching labels.
      # See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details about labelSelector.
      # Only one local gateway can be specified without a selector. It will act as the default local gateway.
      local-gateways: |
        - name: knative-local-gateway
          namespace: knative-serving
          service: knative-local-gateway.istio-system.svc.cluster.local
      #
      #
      # The old format has the following pattern:
      # ```
      # local-gateway.{{local_gateway_namespace}}.{{local_gateway_name}}:
      # "{{cluster_local_gateway_name}}.{{cluster_local_gateway_namespace}}.svc.cluster.local"
      # ```
      # Please use the new configuration format `local-gateways` for future compatibility.
      # This configuration will raise an error if either `external-gateways` or `local-gateways` is defined.
      local-gateway.knative-serving.knative-local-gateway: "knative-local-gateway.istio-system.svc.cluster.local"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n\n# external-gateways defines a gateway and Istio service to serve external traffic.\n# It is the new and preferred way to define the configuration.\n# The format is as follow:\n# ```\n# external-gateways: |\n#   - name: {{gateway_name}}\n#     namespace: {{gateway_namespace}}\n#     service: {{ingress_name}}.{{ingress_namespace}}.svc.cluster.local\n#     labelSelector:\n#       matchExpressions:\n#       - key: {{label_key}}\n#         operator: {{operator}}\n#         values: [{{label_value}}]\n#       matchLabels:\n#         {{label_key}}: {{label_value}}\n# ```\n# name, namespace \u0026 service are mandatory and can't be empty. labelSelector is optional.\n# If labelSelector is specified, the external gateway will be used by the knative service with matching labels.\n# See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details about labelSelector.\n# Only one external gateway can be specified without a selector. It will act as the default external gateway.\nexternal-gateways: |\n  - name: knative-ingress-gateway\n    namespace: knative-serving\n    service: istio-ingressgateway.istio-system.svc.cluster.local\n#\n#\n# The old format has the following pattern:\n# ```\n# gateway.{{gateway_namespace}}.{{gateway_name}}: \"{{ingress_name}}.{{ingress_namespace}}.svc.cluster.local\"\n# ```\n# Please use the new configuration format `external-gateways` for future compatibility.\n# This configuration will raise an error if either `external-gateways` or `local-gateways` is defined.\ngateway.knative-serving.knative-ingress-gateway: \"istio-ingressgateway.istio-system.svc.cluster.local\"\n\n\n# local-gateways defines a cluster local gateway to allow pods outside of the mesh to access\n# Services and Routes not exposing through an ingress. If the users\n# do have a service mesh setup, this isn't required and can be removed.\n#\n# An example use case is when users want to use Istio without any\n# sidecar injection (like Knative's istio-ci-no-mesh.yaml). Since every pod\n# is outside of the service mesh in that case, a cluster-local service\n# will need to be exposed to a cluster-local gateway to be accessible.\n#\n# It is the new and preferred way to define the configuration.\n# The format is as follow:\n# ```\n# local-gateways: |\n#   - name: {{local_gateway_name}}\n#     namespace: {{local_gateway_namespace}}\n#     service: {{cluster_local_gateway_name}}.{{cluster_local_gateway_namespace}}.svc.cluster.local\n#     labelSelector:\n#       matchExpressions:\n#       - key: {{label_key}}\n#         operator: {{operator}}\n#         values: [{{label_value}}]\n#       matchLabels:\n#         {{label_key}}: {{label_value}}\n# ```\n# name, namespace \u0026 service are mandatory and can't be empty. labelSelector is optional.\n# If labelSelector is specified, the local gateway will be used by the knative service with matching labels.\n# See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details about labelSelector.\n# Only one local gateway can be specified without a selector. It will act as the default local gateway.\nlocal-gateways: |\n  - name: knative-local-gateway\n    namespace: knative-serving\n    service: knative-local-gateway.istio-system.svc.cluster.local\n#\n#\n# The old format has the following pattern:\n# ```\n# local-gateway.{{local_gateway_namespace}}.{{local_gateway_name}}:\n# \"{{cluster_local_gateway_name}}.{{cluster_local_gateway_namespace}}.svc.cluster.local\"\n# ```\n# Please use the new configuration format `local-gateways` for future compatibility.\n# This configuration will raise an error if either `external-gateways` or `local-gateways` is defined.\nlocal-gateway.knative-serving.knative-local-gateway: \"knative-local-gateway.istio-system.svc.cluster.local\"\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"net-istio","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0","networking.knative.dev/ingress-provider":"istio"},"name":"config-istio","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:23Z"
    labels:
      app.kubernetes.io/component: net-istio
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
      networking.knative.dev/ingress-provider: istio
    name: config-istio
    namespace: knative-serving
    resourceVersion: "1237"
    uid: 26c82cea-c0f1-42c0-adb7-6d1ea46ccf9b
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # lease-duration is how long non-leaders will wait to try to acquire the
      # lock; 15 seconds is the value used by core kubernetes controllers.
      lease-duration: "60s"

      # renew-deadline is how long a leader will try to renew the lease before
      # giving up; 10 seconds is the value used by core kubernetes controllers.
      renew-deadline: "40s"

      # retry-period is how long the leader election client waits between tries of
      # actions; 2 seconds is the value used by core kubernetes controllers.
      retry-period: "10s"

      # buckets is the number of buckets used to partition key space of each
      # Reconciler. If this number is M and the replica number of the controller
      # is N, the N replicas will compete for the M buckets. The owner of a
      # bucket will take care of the reconciling for the keys partitioned into
      # that bucket.
      buckets: "1"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: f4b71f57
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# lease-duration is how long non-leaders will wait to try to acquire the\n# lock; 15 seconds is the value used by core kubernetes controllers.\nlease-duration: \"60s\"\n\n# renew-deadline is how long a leader will try to renew the lease before\n# giving up; 10 seconds is the value used by core kubernetes controllers.\nrenew-deadline: \"40s\"\n\n# retry-period is how long the leader election client waits between tries of\n# actions; 2 seconds is the value used by core kubernetes controllers.\nretry-period: \"10s\"\n\n# buckets is the number of buckets used to partition key space of each\n# Reconciler. If this number is M and the replica number of the controller\n# is N, the N replicas will compete for the M buckets. The owner of a\n# bucket will take care of the reconciling for the keys partitioned into\n# that bucket.\nbuckets: \"1\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"f4b71f57"},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-leader-election","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-leader-election
    namespace: knative-serving
    resourceVersion: "984"
    uid: 7c93e5da-1dba-4ff1-9558-73f2f90593a3
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # Common configuration for all Knative codebase
      zap-logger-config: |
        {
          "level": "info",
          "development": false,
          "outputPaths": ["stdout"],
          "errorOutputPaths": ["stderr"],
          "encoding": "json",
          "encoderConfig": {
            "timeKey": "timestamp",
            "levelKey": "severity",
            "nameKey": "logger",
            "callerKey": "caller",
            "messageKey": "message",
            "stacktraceKey": "stacktrace",
            "lineEnding": "",
            "levelEncoder": "",
            "timeEncoder": "iso8601",
            "durationEncoder": "",
            "callerEncoder": ""
          }
        }

      # Log level overrides
      # For all components except the queue proxy,
      # changes are picked up immediately.
      # For queue proxy, changes require recreation of the pods.
      loglevel.controller: "info"
      loglevel.autoscaler: "info"
      loglevel.queueproxy: "info"
      loglevel.webhook: "info"
      loglevel.activator: "info"
      loglevel.hpaautoscaler: "info"
      loglevel.net-certmanager-controller: "info"
      loglevel.net-istio-controller: "info"
      loglevel.net-contour-controller: "info"
      loglevel.net-kourier-controller: "info"
      loglevel.net-gateway-api-controller: "info"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 53fda05f
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# Common configuration for all Knative codebase\nzap-logger-config: |\n  {\n    \"level\": \"info\",\n    \"development\": false,\n    \"outputPaths\": [\"stdout\"],\n    \"errorOutputPaths\": [\"stderr\"],\n    \"encoding\": \"json\",\n    \"encoderConfig\": {\n      \"timeKey\": \"timestamp\",\n      \"levelKey\": \"severity\",\n      \"nameKey\": \"logger\",\n      \"callerKey\": \"caller\",\n      \"messageKey\": \"message\",\n      \"stacktraceKey\": \"stacktrace\",\n      \"lineEnding\": \"\",\n      \"levelEncoder\": \"\",\n      \"timeEncoder\": \"iso8601\",\n      \"durationEncoder\": \"\",\n      \"callerEncoder\": \"\"\n    }\n  }\n\n# Log level overrides\n# For all components except the queue proxy,\n# changes are picked up immediately.\n# For queue proxy, changes require recreation of the pods.\nloglevel.controller: \"info\"\nloglevel.autoscaler: \"info\"\nloglevel.queueproxy: \"info\"\nloglevel.webhook: \"info\"\nloglevel.activator: \"info\"\nloglevel.hpaautoscaler: \"info\"\nloglevel.net-certmanager-controller: \"info\"\nloglevel.net-istio-controller: \"info\"\nloglevel.net-contour-controller: \"info\"\nloglevel.net-kourier-controller: \"info\"\nloglevel.net-gateway-api-controller: \"info\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"53fda05f"},"labels":{"app.kubernetes.io/component":"logging","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-logging","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: logging
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-logging
    namespace: knative-serving
    resourceVersion: "985"
    uid: 9ae9fb3a-7a58-4bdc-b7c1-66fe3ea2b168
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # ingress-class specifies the default ingress class
      # to use when not dictated by Route annotation.
      #
      # If not specified, will use the Istio ingress.
      #
      # Note that changing the Ingress class of an existing Route
      # will result in undefined behavior.  Therefore it is best to only
      # update this value during the setup of Knative, to avoid getting
      # undefined behavior.
      ingress-class: "istio.ingress.networking.knative.dev"

      # certificate-class specifies the default Certificate class
      # to use when not dictated by Route annotation.
      #
      # If not specified, will use the Cert-Manager Certificate.
      #
      # Note that changing the Certificate class of an existing Route
      # will result in undefined behavior.  Therefore it is best to only
      # update this value during the setup of Knative, to avoid getting
      # undefined behavior.
      certificate-class: "cert-manager.certificate.networking.knative.dev"

      # namespace-wildcard-cert-selector specifies a LabelSelector which
      # determines which namespaces should have a wildcard certificate
      # provisioned.
      #
      # Use an empty value to disable the feature (this is the default):
      #   namespace-wildcard-cert-selector: ""
      #
      # Use an empty object to enable for all namespaces
      #   namespace-wildcard-cert-selector: {}
      #
      # Useful labels include the "kubernetes.io/metadata.name" label to
      # avoid provisioning a certificate for the "kube-system" namespaces.
      # Use the following selector to match pre-1.0 behavior of using
      # "networking.knative.dev/disableWildcardCert" to exclude namespaces:
      #
      # matchExpressions:
      # - key: "networking.knative.dev/disableWildcardCert"
      #   operator: "NotIn"
      #   values: ["true"]
      namespace-wildcard-cert-selector: ""

      # domain-template specifies the golang text template string to use
      # when constructing the Knative service's DNS name. The default
      # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}".
      #
      # Valid variables defined in the template include Name, Namespace, Domain,
      # Labels, and Annotations. Name will be the result of the tag-template
      # below, if a tag is specified for the route.
      #
      # Changing this value might be necessary when the extra levels in
      # the domain name generated is problematic for wildcard certificates
      # that only support a single level of domain name added to the
      # certificate's domain. In those cases you might consider using a value
      # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace
      # entirely from the template. When choosing a new value be thoughtful
      # of the potential for conflicts - for example, when users choose to use
      # characters such as `-` in their service, or namespace, names.
      # {{.Annotations}} or {{.Labels}} can be used for any customization in the
      # go template if needed.
      # We strongly recommend keeping namespace part of the template to avoid
      # domain name clashes:
      # eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}'
      # and you have an annotation {"sub":"foo"}, then the generated template
      # would be {Name}-{Namespace}.foo.{Domain}
      domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"

      # tag-template specifies the golang text template string to use
      # when constructing the DNS name for "tags" within the traffic blocks
      # of Routes and Configuration.  This is used in conjunction with the
      # domain-template above to determine the full URL for the tag.
      tag-template: "{{.Tag}}-{{.Name}}"

      # auto-tls is deprecated and replaced by external-domain-tls
      auto-tls: "Disabled"

      # Controls whether TLS certificates are automatically provisioned and
      # installed in the Knative ingress to terminate TLS connections
      # for cluster external domains (like: app.example.com)
      # - Enabled: enables the TLS certificate provisioning feature for cluster external domains.
      # - Disabled: disables the TLS certificate provisioning feature for cluster external domains.
      external-domain-tls: "Disabled"

      # Controls weather TLS certificates are automatically provisioned and
      # installed in the Knative ingress to terminate TLS connections
      # for cluster local domains (like: app.namespace.svc.<your-cluster-domain>)
      # - Enabled: enables the TLS certificate provisioning feature for cluster cluster-local domains.
      # - Disabled: disables the TLS certificate provisioning feature for cluster cluster local domains.
      # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
      #       for now. Use with caution.
      cluster-local-domain-tls: "Disabled"

      # internal-encryption is deprecated and replaced by system-internal-tls
      internal-encryption: "false"

      # system-internal-tls controls weather TLS encryption is used for connections between
      # the internal components of Knative:
      # - ingress to activator
      # - ingress to queue-proxy
      # - activator to queue-proxy
      #
      # Possible values for this flag are:
      # - Enabled: enables the TLS certificate provisioning feature for cluster cluster-local domains.
      # - Disabled: disables the TLS certificate provisioning feature for cluster cluster local domains.
      # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
      #       for now. Use with caution.
      system-internal-tls: "Disabled"

      # Controls the behavior of the HTTP endpoint for the Knative ingress.
      # It requires auto-tls to be enabled.
      # - Enabled: The Knative ingress will be able to serve HTTP connection.
      # - Redirected: The Knative ingress will send a 301 redirect for all
      # http connections, asking the clients to use HTTPS.
      #
      # "Disabled" option is deprecated.
      http-protocol: "Enabled"

      # rollout-duration contains the minimal duration in seconds over which the
      # Configuration traffic targets are rolled out to the newest revision.
      rollout-duration: "0"

      # autocreate-cluster-domain-claims controls whether ClusterDomainClaims should
      # be automatically created (and deleted) as needed when DomainMappings are
      # reconciled.
      #
      # If this is "false" (the default), the cluster administrator is
      # responsible for creating ClusterDomainClaims and delegating them to
      # namespaces via their spec.Namespace field. This setting should be used in
      # multitenant environments which need to control which namespace can use a
      # particular domain name in a domain mapping.
      #
      # If this is "true", users are able to associate arbitrary names with their
      # services via the DomainMapping feature.
      autocreate-cluster-domain-claims: "false"

      # If true, networking plugins can add additional information to deployed
      # applications to make their pods directly accessible via their IPs even if mesh is
      # enabled and thus direct-addressability is usually not possible.
      # Consumers like Knative Serving can use this setting to adjust their behavior
      # accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.
      #
      # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
      #       for now. Use with caution.
      enable-mesh-pod-addressability: "false"

      # mesh-compatibility-mode indicates whether consumers of network plugins
      # should directly contact Pod IPs (most efficient), or should use the
      # Cluster IP (less efficient, needed when mesh is enabled unless
      # `enable-mesh-pod-addressability`, above, is set).
      # Permitted values are:
      #  - "auto" (default): automatically determine which mesh mode to use by trying Pod IP and falling back to Cluster IP as needed.
      #  - "enabled": always use Cluster IP and do not attempt to use Pod IPs.
      #  - "disabled": always use Pod IPs and do not fall back to Cluster IP on failure.
      mesh-compatibility-mode: "auto"

      # Defines the scheme used for external URLs if auto-tls is not enabled.
      # This can be used for making Knative report all URLs as "HTTPS" for example, if you're
      # fronting Knative with an external loadbalancer that deals with TLS termination and
      # Knative doesn't know about that otherwise.
      default-external-scheme: "http"
    autocreate-cluster-domain-claims: "true"
    ingress.class: istio.ingress.networking.knative.dev
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 0573e07d
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# ingress-class specifies the default ingress class\n# to use when not dictated by Route annotation.\n#\n# If not specified, will use the Istio ingress.\n#\n# Note that changing the Ingress class of an existing Route\n# will result in undefined behavior.  Therefore it is best to only\n# update this value during the setup of Knative, to avoid getting\n# undefined behavior.\ningress-class: \"istio.ingress.networking.knative.dev\"\n\n# certificate-class specifies the default Certificate class\n# to use when not dictated by Route annotation.\n#\n# If not specified, will use the Cert-Manager Certificate.\n#\n# Note that changing the Certificate class of an existing Route\n# will result in undefined behavior.  Therefore it is best to only\n# update this value during the setup of Knative, to avoid getting\n# undefined behavior.\ncertificate-class: \"cert-manager.certificate.networking.knative.dev\"\n\n# namespace-wildcard-cert-selector specifies a LabelSelector which\n# determines which namespaces should have a wildcard certificate\n# provisioned.\n#\n# Use an empty value to disable the feature (this is the default):\n#   namespace-wildcard-cert-selector: \"\"\n#\n# Use an empty object to enable for all namespaces\n#   namespace-wildcard-cert-selector: {}\n#\n# Useful labels include the \"kubernetes.io/metadata.name\" label to\n# avoid provisioning a certificate for the \"kube-system\" namespaces.\n# Use the following selector to match pre-1.0 behavior of using\n# \"networking.knative.dev/disableWildcardCert\" to exclude namespaces:\n#\n# matchExpressions:\n# - key: \"networking.knative.dev/disableWildcardCert\"\n#   operator: \"NotIn\"\n#   values: [\"true\"]\nnamespace-wildcard-cert-selector: \"\"\n\n# domain-template specifies the golang text template string to use\n# when constructing the Knative service's DNS name. The default\n# value is \"{{.Name}}.{{.Namespace}}.{{.Domain}}\".\n#\n# Valid variables defined in the template include Name, Namespace, Domain,\n# Labels, and Annotations. Name will be the result of the tag-template\n# below, if a tag is specified for the route.\n#\n# Changing this value might be necessary when the extra levels in\n# the domain name generated is problematic for wildcard certificates\n# that only support a single level of domain name added to the\n# certificate's domain. In those cases you might consider using a value\n# of \"{{.Name}}-{{.Namespace}}.{{.Domain}}\", or removing the Namespace\n# entirely from the template. When choosing a new value be thoughtful\n# of the potential for conflicts - for example, when users choose to use\n# characters such as `-` in their service, or namespace, names.\n# {{.Annotations}} or {{.Labels}} can be used for any customization in the\n# go template if needed.\n# We strongly recommend keeping namespace part of the template to avoid\n# domain name clashes:\n# eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations \"sub\"}}.{{.Domain}}'\n# and you have an annotation {\"sub\":\"foo\"}, then the generated template\n# would be {Name}-{Namespace}.foo.{Domain}\ndomain-template: \"{{.Name}}.{{.Namespace}}.{{.Domain}}\"\n\n# tag-template specifies the golang text template string to use\n# when constructing the DNS name for \"tags\" within the traffic blocks\n# of Routes and Configuration.  This is used in conjunction with the\n# domain-template above to determine the full URL for the tag.\ntag-template: \"{{.Tag}}-{{.Name}}\"\n\n# auto-tls is deprecated and replaced by external-domain-tls\nauto-tls: \"Disabled\"\n\n# Controls whether TLS certificates are automatically provisioned and\n# installed in the Knative ingress to terminate TLS connections\n# for cluster external domains (like: app.example.com)\n# - Enabled: enables the TLS certificate provisioning feature for cluster external domains.\n# - Disabled: disables the TLS certificate provisioning feature for cluster external domains.\nexternal-domain-tls: \"Disabled\"\n\n# Controls weather TLS certificates are automatically provisioned and\n# installed in the Knative ingress to terminate TLS connections\n# for cluster local domains (like: app.namespace.svc.\u003cyour-cluster-domain\u003e)\n# - Enabled: enables the TLS certificate provisioning feature for cluster cluster-local domains.\n# - Disabled: disables the TLS certificate provisioning feature for cluster cluster local domains.\n# NOTE: This flag is in an alpha state and is mostly here to enable internal testing\n#       for now. Use with caution.\ncluster-local-domain-tls: \"Disabled\"\n\n# internal-encryption is deprecated and replaced by system-internal-tls\ninternal-encryption: \"false\"\n\n# system-internal-tls controls weather TLS encryption is used for connections between\n# the internal components of Knative:\n# - ingress to activator\n# - ingress to queue-proxy\n# - activator to queue-proxy\n#\n# Possible values for this flag are:\n# - Enabled: enables the TLS certificate provisioning feature for cluster cluster-local domains.\n# - Disabled: disables the TLS certificate provisioning feature for cluster cluster local domains.\n# NOTE: This flag is in an alpha state and is mostly here to enable internal testing\n#       for now. Use with caution.\nsystem-internal-tls: \"Disabled\"\n\n# Controls the behavior of the HTTP endpoint for the Knative ingress.\n# It requires auto-tls to be enabled.\n# - Enabled: The Knative ingress will be able to serve HTTP connection.\n# - Redirected: The Knative ingress will send a 301 redirect for all\n# http connections, asking the clients to use HTTPS.\n#\n# \"Disabled\" option is deprecated.\nhttp-protocol: \"Enabled\"\n\n# rollout-duration contains the minimal duration in seconds over which the\n# Configuration traffic targets are rolled out to the newest revision.\nrollout-duration: \"0\"\n\n# autocreate-cluster-domain-claims controls whether ClusterDomainClaims should\n# be automatically created (and deleted) as needed when DomainMappings are\n# reconciled.\n#\n# If this is \"false\" (the default), the cluster administrator is\n# responsible for creating ClusterDomainClaims and delegating them to\n# namespaces via their spec.Namespace field. This setting should be used in\n# multitenant environments which need to control which namespace can use a\n# particular domain name in a domain mapping.\n#\n# If this is \"true\", users are able to associate arbitrary names with their\n# services via the DomainMapping feature.\nautocreate-cluster-domain-claims: \"false\"\n\n# If true, networking plugins can add additional information to deployed\n# applications to make their pods directly accessible via their IPs even if mesh is\n# enabled and thus direct-addressability is usually not possible.\n# Consumers like Knative Serving can use this setting to adjust their behavior\n# accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.\n#\n# NOTE: This flag is in an alpha state and is mostly here to enable internal testing\n#       for now. Use with caution.\nenable-mesh-pod-addressability: \"false\"\n\n# mesh-compatibility-mode indicates whether consumers of network plugins\n# should directly contact Pod IPs (most efficient), or should use the\n# Cluster IP (less efficient, needed when mesh is enabled unless\n# `enable-mesh-pod-addressability`, above, is set).\n# Permitted values are:\n#  - \"auto\" (default): automatically determine which mesh mode to use by trying Pod IP and falling back to Cluster IP as needed.\n#  - \"enabled\": always use Cluster IP and do not attempt to use Pod IPs.\n#  - \"disabled\": always use Pod IPs and do not fall back to Cluster IP on failure.\nmesh-compatibility-mode: \"auto\"\n\n# Defines the scheme used for external URLs if auto-tls is not enabled.\n# This can be used for making Knative report all URLs as \"HTTPS\" for example, if you're\n# fronting Knative with an external loadbalancer that deals with TLS termination and\n# Knative doesn't know about that otherwise.\ndefault-external-scheme: \"http\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"0573e07d"},"labels":{"app.kubernetes.io/component":"networking","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-network","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: networking
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-network
    namespace: knative-serving
    resourceVersion: "1346"
    uid: 2e7c84cf-e993-4d84-8cdf-f888741757e0
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.

      # logging.enable-var-log-collection defaults to false.
      # The fluentd daemon set will be set up to collect /var/log if
      # this flag is true.
      logging.enable-var-log-collection: "false"

      # logging.revision-url-template provides a template to use for producing the
      # logging URL that is injected into the status of each Revision.
      logging.revision-url-template: "http://logging.example.com/?revisionUID=${REVISION_UID}"

      # If non-empty, this enables queue proxy writing user request logs to stdout, excluding probe
      # requests.
      # NB: after 0.18 release logging.enable-request-log must be explicitly set to true
      # in order for request logging to be enabled.
      #
      # The value determines the shape of the request logs and it must be a valid go text/template.
      # It is important to keep this as a single line. Multiple lines are parsed as separate entities
      # by most collection agents and will split the request logs into multiple records.
      #
      # The following fields and functions are available to the template:
      #
      # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
      # representing an HTTP request received by the server.
      #
      # Response:
      # struct {
      #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
      #   Size    int       // An int representing the size of the response.
      #   Latency float64   // A float64 representing the latency of the response in seconds.
      # }
      #
      # Revision:
      # struct {
      #   Name          string  // Knative revision name
      #   Namespace     string  // Knative revision namespace
      #   Service       string  // Knative service name
      #   Configuration string  // Knative configuration name
      #   PodName       string  // Name of the pod hosting the revision
      #   PodIP         string  // IP of the pod hosting the revision
      # }
      #
      logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'

      # If true, the request logging will be enabled.
      # NB: up to and including Knative version 0.18 if logging.request-log-template is non-empty, this value
      # will be ignored.
      logging.enable-request-log: "false"

      # If true, this enables queue proxy writing request logs for probe requests to stdout.
      # It uses the same template for user requests, i.e. logging.request-log-template.
      logging.enable-probe-request-log: "false"

      # metrics.backend-destination field specifies the system metrics destination.
      # It supports either prometheus (the default) or opencensus.
      metrics.backend-destination: prometheus

      # metrics.reporting-period-seconds specifies the global metrics reporting period for control and data plane components.
      # If a zero or negative value is passed the default reporting period is used (10 secs).
      # If the attribute is not specified a default value is used per metrics backend.
      # For the prometheus backend the default reporting period is 5s while for opencensus it is 60s.
      metrics.reporting-period-seconds: "5"

      # metrics.request-metrics-backend-destination specifies the request metrics
      # destination. It enables queue proxy to send request metrics.
      # Currently supported values: prometheus (the default), opencensus.
      metrics.request-metrics-backend-destination: prometheus

      # metrics.request-metrics-reporting-period-seconds specifies the request metrics reporting period in sec at queue proxy.
      # If a zero or negative value is passed the default reporting period is used (10 secs).
      # If the attribute is not specified, it is overridden by the value of metrics.reporting-period-seconds.
      metrics.request-metrics-reporting-period-seconds: "5"

      # profiling.enable indicates whether it is allowed to retrieve runtime profiling data from
      # the pods via an HTTP server in the format expected by the pprof visualization tool. When
      # enabled, the Knative Serving pods expose the profiling data on an alternate HTTP port 8008.
      # The HTTP context root for profiling is then /debug/pprof/.
      profiling.enable: "false"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: 54abd711
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# logging.enable-var-log-collection defaults to false.\n# The fluentd daemon set will be set up to collect /var/log if\n# this flag is true.\nlogging.enable-var-log-collection: \"false\"\n\n# logging.revision-url-template provides a template to use for producing the\n# logging URL that is injected into the status of each Revision.\nlogging.revision-url-template: \"http://logging.example.com/?revisionUID=${REVISION_UID}\"\n\n# If non-empty, this enables queue proxy writing user request logs to stdout, excluding probe\n# requests.\n# NB: after 0.18 release logging.enable-request-log must be explicitly set to true\n# in order for request logging to be enabled.\n#\n# The value determines the shape of the request logs and it must be a valid go text/template.\n# It is important to keep this as a single line. Multiple lines are parsed as separate entities\n# by most collection agents and will split the request logs into multiple records.\n#\n# The following fields and functions are available to the template:\n#\n# Request: An http.Request (see https://golang.org/pkg/net/http/#Request)\n# representing an HTTP request received by the server.\n#\n# Response:\n# struct {\n#   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\n#   Size    int       // An int representing the size of the response.\n#   Latency float64   // A float64 representing the latency of the response in seconds.\n# }\n#\n# Revision:\n# struct {\n#   Name          string  // Knative revision name\n#   Namespace     string  // Knative revision namespace\n#   Service       string  // Knative service name\n#   Configuration string  // Knative configuration name\n#   PodName       string  // Name of the pod hosting the revision\n#   PodIP         string  // IP of the pod hosting the revision\n# }\n#\nlogging.request-log-template: '{\"httpRequest\": {\"requestMethod\": \"{{.Request.Method}}\", \"requestUrl\": \"{{js .Request.RequestURI}}\", \"requestSize\": \"{{.Request.ContentLength}}\", \"status\": {{.Response.Code}}, \"responseSize\": \"{{.Response.Size}}\", \"userAgent\": \"{{js .Request.UserAgent}}\", \"remoteIp\": \"{{js .Request.RemoteAddr}}\", \"serverIp\": \"{{.Revision.PodIP}}\", \"referer\": \"{{js .Request.Referer}}\", \"latency\": \"{{.Response.Latency}}s\", \"protocol\": \"{{.Request.Proto}}\"}, \"traceId\": \"{{index .Request.Header \"X-B3-Traceid\"}}\"}'\n\n# If true, the request logging will be enabled.\n# NB: up to and including Knative version 0.18 if logging.request-log-template is non-empty, this value\n# will be ignored.\nlogging.enable-request-log: \"false\"\n\n# If true, this enables queue proxy writing request logs for probe requests to stdout.\n# It uses the same template for user requests, i.e. logging.request-log-template.\nlogging.enable-probe-request-log: \"false\"\n\n# metrics.backend-destination field specifies the system metrics destination.\n# It supports either prometheus (the default) or opencensus.\nmetrics.backend-destination: prometheus\n\n# metrics.reporting-period-seconds specifies the global metrics reporting period for control and data plane components.\n# If a zero or negative value is passed the default reporting period is used (10 secs).\n# If the attribute is not specified a default value is used per metrics backend.\n# For the prometheus backend the default reporting period is 5s while for opencensus it is 60s.\nmetrics.reporting-period-seconds: \"5\"\n\n# metrics.request-metrics-backend-destination specifies the request metrics\n# destination. It enables queue proxy to send request metrics.\n# Currently supported values: prometheus (the default), opencensus.\nmetrics.request-metrics-backend-destination: prometheus\n\n# metrics.request-metrics-reporting-period-seconds specifies the request metrics reporting period in sec at queue proxy.\n# If a zero or negative value is passed the default reporting period is used (10 secs).\n# If the attribute is not specified, it is overridden by the value of metrics.reporting-period-seconds.\nmetrics.request-metrics-reporting-period-seconds: \"5\"\n\n# profiling.enable indicates whether it is allowed to retrieve runtime profiling data from\n# the pods via an HTTP server in the format expected by the pprof visualization tool. When\n# enabled, the Knative Serving pods expose the profiling data on an alternate HTTP port 8008.\n# The HTTP context root for profiling is then /debug/pprof/.\nprofiling.enable: \"false\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"54abd711"},"labels":{"app.kubernetes.io/component":"observability","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-observability","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: observability
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-observability
    namespace: knative-serving
    resourceVersion: "987"
    uid: 1b8772f9-cc6d-44e6-847b-5a8246bd1e77
- apiVersion: v1
  data:
    _example: |
      ################################
      #                              #
      #    EXAMPLE CONFIGURATION     #
      #                              #
      ################################

      # This block is not actually functional configuration,
      # but serves to illustrate the available configuration
      # options and document them in a way that is accessible
      # to users that `kubectl edit` this config map.
      #
      # These sample configuration options may be copied out of
      # this example block and unindented to be in the data block
      # to actually change the configuration.
      #
      # This may be "zipkin" or "none" (default)
      backend: "none"

      # URL to zipkin collector where traces are sent.
      # This must be specified when backend is "zipkin"
      zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

      # Enable zipkin debug mode. This allows all spans to be sent to the server
      # bypassing sampling.
      debug: "false"

      # Percentage (0-1) of requests to trace
      sample-rate: "0.1"
  kind: ConfigMap
  metadata:
    annotations:
      knative.dev/example-checksum: "26614636"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"_example":"################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n#\n# This may be \"zipkin\" or \"none\" (default)\nbackend: \"none\"\n\n# URL to zipkin collector where traces are sent.\n# This must be specified when backend is \"zipkin\"\nzipkin-endpoint: \"http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans\"\n\n# Enable zipkin debug mode. This allows all spans to be sent to the server\n# bypassing sampling.\ndebug: \"false\"\n\n# Percentage (0-1) of requests to trace\nsample-rate: \"0.1\"\n"},"kind":"ConfigMap","metadata":{"annotations":{"knative.dev/example-checksum":"26614636"},"labels":{"app.kubernetes.io/component":"tracing","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"config-tracing","namespace":"knative-serving"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    labels:
      app.kubernetes.io/component: tracing
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: config-tracing
    namespace: knative-serving
    resourceVersion: "988"
    uid: 252a7b5a-8a68-414f-9706-f6bbf99915de
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 3
    name: hello
    namespace: default
    resourceVersion: "1812"
    uid: a1203aa3-ce28-4edd-accd-04bcb7bd3026
  spec:
    template:
      metadata:
        annotations:
          client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
          client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
        creationTimestamp: null
      spec:
        containerConcurrency: 0
        containers:
        - env:
          - name: TARGET
            value: Earth
          image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
          name: user-container
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            successThreshold: 1
            tcpSocket:
              port: 0
          resources: {}
        enableServiceLinks: false
        timeoutSeconds: 300
    traffic:
    - latestRevision: true
      percent: 50
    - latestRevision: false
      percent: 50
      revisionName: hello-00001
  status:
    address:
      url: http://hello.default.svc.cluster.local
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: ConfigurationsReady
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: RoutesReady
    latestCreatedRevisionName: hello-00002
    latestReadyRevisionName: hello-00002
    observedGeneration: 3
    traffic:
    - latestRevision: true
      percent: 50
      revisionName: hello-00002
    - latestRevision: false
      percent: 50
      revisionName: hello-00001
    url: http://hello.default.example.com
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:42Z"
    generation: 3
    name: meow
    namespace: default
    resourceVersion: "1831"
    uid: 23339efe-6b14-4147-91cb-9c74b07cfd69
  spec:
    template:
      metadata:
        annotations:
          client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
          client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
        creationTimestamp: null
      spec:
        containerConcurrency: 0
        containers:
        - env:
          - name: TARGET
            value: Cat
          image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
          name: user-container
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            successThreshold: 1
            tcpSocket:
              port: 0
          resources: {}
        enableServiceLinks: false
        timeoutSeconds: 300
    traffic:
    - latestRevision: true
      percent: 50
    - latestRevision: false
      percent: 50
      revisionName: meow-00001
  status:
    address:
      url: http://meow.default.svc.cluster.local
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: ConfigurationsReady
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: RoutesReady
    latestCreatedRevisionName: meow-00002
    latestReadyRevisionName: meow-00002
    observedGeneration: 3
    traffic:
    - latestRevision: true
      percent: 50
      revisionName: meow-00002
    - latestRevision: false
      percent: 50
      revisionName: meow-00001
    url: http://meow.default.example.com
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: serving.knative.dev/v1
  kind: Route
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:34Z"
    finalizers:
    - routes.serving.knative.dev
    generation: 2
    labels:
      serving.knative.dev/service: hello
    name: hello
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Service
      name: hello
      uid: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    resourceVersion: "1811"
    uid: 82afb194-eff9-4e2f-ad45-1d103687fe84
  spec:
    traffic:
    - configurationName: hello
      latestRevision: true
      percent: 50
    - latestRevision: false
      percent: 50
      revisionName: hello-00001
  status:
    address:
      url: http://hello.default.svc.cluster.local
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: AllTrafficAssigned
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      message: external-domain-tls is not enabled
      reason: TLSNotEnabled
      status: "True"
      type: CertificateProvisioned
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: IngressReady
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    observedGeneration: 2
    traffic:
    - latestRevision: true
      percent: 50
      revisionName: hello-00002
    - latestRevision: false
      percent: 50
      revisionName: hello-00001
    url: http://hello.default.example.com
- apiVersion: serving.knative.dev/v1
  kind: Route
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:42Z"
    finalizers:
    - routes.serving.knative.dev
    generation: 2
    labels:
      serving.knative.dev/service: meow
    name: meow
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Service
      name: meow
      uid: 23339efe-6b14-4147-91cb-9c74b07cfd69
    resourceVersion: "1830"
    uid: 7e2cc500-e950-47a6-aa0a-4753a02ce153
  spec:
    traffic:
    - configurationName: meow
      latestRevision: true
      percent: 50
    - latestRevision: false
      percent: 50
      revisionName: meow-00001
  status:
    address:
      url: http://meow.default.svc.cluster.local
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: AllTrafficAssigned
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      message: external-domain-tls is not enabled
      reason: TLSNotEnabled
      status: "True"
      type: CertificateProvisioned
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: IngressReady
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    observedGeneration: 2
    traffic:
    - latestRevision: true
      percent: 50
      revisionName: meow-00002
    - latestRevision: false
      percent: 50
      revisionName: meow-00001
    url: http://meow.default.example.com
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: serving.knative.dev/v1
  kind: Configuration
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
      serving.knative.dev/routes: hello
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 2
    labels:
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Service
      name: hello
      uid: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    resourceVersion: "1662"
    uid: 59876ead-5f2a-4f1a-8172-77b79495540f
  spec:
    template:
      metadata:
        annotations:
          client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
          client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
        creationTimestamp: null
      spec:
        containerConcurrency: 0
        containers:
        - env:
          - name: TARGET
            value: Earth
          image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
          name: user-container
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            successThreshold: 1
            tcpSocket:
              port: 0
          resources: {}
        enableServiceLinks: false
        timeoutSeconds: 300
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: Ready
    latestCreatedRevisionName: hello-00002
    latestReadyRevisionName: hello-00002
    observedGeneration: 2
- apiVersion: serving.knative.dev/v1
  kind: Configuration
  metadata:
    annotations:
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
      serving.knative.dev/routes: meow
    creationTimestamp: "2024-04-25T02:33:42Z"
    generation: 2
    labels:
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Service
      name: meow
      uid: 23339efe-6b14-4147-91cb-9c74b07cfd69
    resourceVersion: "1772"
    uid: 229ae768-9501-444e-92d5-f1fad7e16e72
  spec:
    template:
      metadata:
        annotations:
          client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
          client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
        creationTimestamp: null
      spec:
        containerConcurrency: 0
        containers:
        - env:
          - name: TARGET
            value: Cat
          image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
          name: user-container
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            successThreshold: 1
            tcpSocket:
              port: 0
          resources: {}
        enableServiceLinks: false
        timeoutSeconds: 300
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: Ready
    latestCreatedRevisionName: meow-00002
    latestReadyRevisionName: meow-00002
    observedGeneration: 2
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: serving.knative.dev/v1
  kind: Revision
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:34Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/routes: hello
      serving.knative.dev/routingStateModified: "2024-04-25T02:33:49Z"
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 1
    labels:
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/routingState: active
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00001
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Configuration
      name: hello
      uid: 59876ead-5f2a-4f1a-8172-77b79495540f
    resourceVersion: "1797"
    uid: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
  spec:
    containerConcurrency: 0
    containers:
    - env:
      - name: TARGET
        value: World
      image: ghcr.io/knative/helloworld-go:latest
      name: user-container
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        successThreshold: 1
        tcpSocket:
          port: 0
      resources: {}
    enableServiceLinks: false
    timeoutSeconds: 300
  status:
    actualReplicas: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      severity: Info
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: ContainerHealthy
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:35Z"
      status: "True"
      type: ResourcesAvailable
    containerStatuses:
    - imageDigest: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
    desiredReplicas: 1
    observedGeneration: 1
- apiVersion: serving.knative.dev/v1
  kind: Revision
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/routes: hello
      serving.knative.dev/routingStateModified: "2024-04-25T02:33:44Z"
    creationTimestamp: "2024-04-25T02:33:44Z"
    generation: 1
    labels:
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/routingState: active
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00002
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Configuration
      name: hello
      uid: 59876ead-5f2a-4f1a-8172-77b79495540f
    resourceVersion: "1758"
    uid: 84c3c345-5075-46be-ab84-cab82cdc1bfc
  spec:
    containerConcurrency: 0
    containers:
    - env:
      - name: TARGET
        value: Earth
      image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        successThreshold: 1
        tcpSocket:
          port: 0
      resources: {}
    enableServiceLinks: false
    timeoutSeconds: 300
  status:
    actualReplicas: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      severity: Info
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: ContainerHealthy
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:44Z"
      status: "True"
      type: ResourcesAvailable
    containerStatuses:
    - imageDigest: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
    desiredReplicas: 1
    observedGeneration: 1
- apiVersion: serving.knative.dev/v1
  kind: Revision
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:42Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/routes: meow
      serving.knative.dev/routingStateModified: "2024-04-25T02:33:49Z"
    creationTimestamp: "2024-04-25T02:33:42Z"
    generation: 1
    labels:
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/routingState: active
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00001
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Configuration
      name: meow
      uid: 229ae768-9501-444e-92d5-f1fad7e16e72
    resourceVersion: "1816"
    uid: ed476a06-50c2-4bdf-8480-21fd108b6183
  spec:
    containerConcurrency: 0
    containers:
    - env:
      - name: TARGET
        value: Meow
      image: ghcr.io/knative/helloworld-go:latest
      name: user-container
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        successThreshold: 1
        tcpSocket:
          port: 0
      resources: {}
    enableServiceLinks: false
    timeoutSeconds: 300
  status:
    actualReplicas: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      severity: Info
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: ContainerHealthy
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: ResourcesAvailable
    containerStatuses:
    - imageDigest: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
    desiredReplicas: 1
    observedGeneration: 1
- apiVersion: serving.knative.dev/v1
  kind: Revision
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/routes: meow
      serving.knative.dev/routingStateModified: "2024-04-25T02:33:46Z"
    creationTimestamp: "2024-04-25T02:33:46Z"
    generation: 1
    labels:
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/routingState: active
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00002
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Configuration
      name: meow
      uid: 229ae768-9501-444e-92d5-f1fad7e16e72
    resourceVersion: "1836"
    uid: fb2aa138-98aa-43ca-ba3b-344bbea16db6
  spec:
    containerConcurrency: 0
    containers:
    - env:
      - name: TARGET
        value: Cat
      image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        successThreshold: 1
        tcpSocket:
          port: 0
      resources: {}
    enableServiceLinks: false
    timeoutSeconds: 300
  status:
    actualReplicas: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      severity: Info
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: ContainerHealthy
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:46Z"
      status: "True"
      type: ResourcesAvailable
    containerStatuses:
    - imageDigest: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
      name: user-container
    desiredReplicas: 1
    observedGeneration: 1
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: Certificate
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.internal.knative.dev/v1alpha1","kind":"Certificate","metadata":{"annotations":{"networking.knative.dev/certificate.class":"cert-manager.certificate.networking.knative.dev"},"labels":{"knative.dev/install-knative-certificate":"true","networking.knative.dev/certificate-type":"system-internal"},"name":"routing-serving-certs","namespace":"istio-system"},"spec":{"dnsNames":["kn-routing"],"secretName":"routing-serving-certs"}}
      networking.knative.dev/certificate.class: cert-manager.certificate.networking.knative.dev
    creationTimestamp: "2024-04-25T02:33:23Z"
    generation: 1
    labels:
      knative.dev/install-knative-certificate: "true"
      networking.knative.dev/certificate-type: system-internal
    name: routing-serving-certs
    namespace: istio-system
    resourceVersion: "1273"
    uid: 858030e9-e0eb-435a-9d07-2384dcaae9e0
  spec:
    dnsNames:
    - kn-routing
    secretName: routing-serving-certs
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: Certificate
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.internal.knative.dev/v1alpha1","kind":"Certificate","metadata":{"annotations":{"networking.knative.dev/certificate.class":"cert-manager.certificate.networking.knative.dev"},"labels":{"networking.knative.dev/certificate-type":"system-internal"},"name":"routing-serving-certs","namespace":"knative-serving"},"spec":{"dnsNames":["kn-routing","data-plane.knative.dev"],"secretName":"routing-serving-certs"}}
      networking.knative.dev/certificate.class: cert-manager.certificate.networking.knative.dev
    creationTimestamp: "2024-04-25T02:33:02Z"
    generation: 1
    labels:
      networking.knative.dev/certificate-type: system-internal
    name: routing-serving-certs
    namespace: knative-serving
    resourceVersion: "976"
    uid: 3efa35a0-e438-48d2-8f75-1d313f3df078
  spec:
    dnsNames:
    - kn-routing
    - data-plane.knative.dev
    secretName: routing-serving-certs
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: Ingress
  metadata:
    annotations:
      networking.internal.knative.dev/rollout: '{"configurations":[{"configurationName":"hello","percent":50,"revisions":[{"revisionName":"hello-00002","percent":50}],"stepParams":{}}]}'
      networking.knative.dev/ingress.class: istio.ingress.networking.knative.dev
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:41Z"
    finalizers:
    - ingresses.networking.internal.knative.dev
    generation: 3
    labels:
      serving.knative.dev/route: hello
      serving.knative.dev/routeNamespace: default
      serving.knative.dev/service: hello
    name: hello
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Route
      name: hello
      uid: 82afb194-eff9-4e2f-ad45-1d103687fe84
    resourceVersion: "1810"
    uid: d3744645-a388-49a1-8561-05ca70b4aafe
  spec:
    httpOption: Enabled
    rules:
    - hosts:
      - hello.default
      - hello.default.svc
      - hello.default.svc.cluster.local
      http:
        paths:
        - splits:
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: hello-00002
            percent: 50
            serviceName: hello-00002
            serviceNamespace: default
            servicePort: 80
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: hello-00001
            percent: 50
            serviceName: hello-00001
            serviceNamespace: default
            servicePort: 80
      visibility: ClusterLocal
    - hosts:
      - hello.default.example.com
      http:
        paths:
        - splits:
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: hello-00002
            percent: 50
            serviceName: hello-00002
            serviceNamespace: default
            servicePort: 80
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: hello-00001
            percent: 50
            serviceName: hello-00001
            serviceNamespace: default
            servicePort: 80
      visibility: ExternalIP
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: LoadBalancerReady
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: NetworkConfigured
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateLoadBalancer:
      ingress:
      - domainInternal: knative-local-gateway.istio-system.svc.cluster.local
    publicLoadBalancer:
      ingress:
      - domainInternal: istio-ingressgateway.istio-system.svc.cluster.local
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: Ingress
  metadata:
    annotations:
      networking.internal.knative.dev/rollout: '{"configurations":[{"configurationName":"meow","percent":50,"revisions":[{"revisionName":"meow-00002","percent":50}],"stepParams":{}}]}'
      networking.knative.dev/ingress.class: istio.ingress.networking.knative.dev
      serving.knative.dev/creator: kubernetes-admin
      serving.knative.dev/lastModifier: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:43Z"
    finalizers:
    - ingresses.networking.internal.knative.dev
    generation: 3
    labels:
      serving.knative.dev/route: meow
      serving.knative.dev/routeNamespace: default
      serving.knative.dev/service: meow
    name: meow
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Route
      name: meow
      uid: 7e2cc500-e950-47a6-aa0a-4753a02ce153
    resourceVersion: "1829"
    uid: af6e4b12-906a-4afc-ab37-c39b9443ba37
  spec:
    httpOption: Enabled
    rules:
    - hosts:
      - meow.default
      - meow.default.svc
      - meow.default.svc.cluster.local
      http:
        paths:
        - splits:
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: meow-00002
            percent: 50
            serviceName: meow-00002
            serviceNamespace: default
            servicePort: 80
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: meow-00001
            percent: 50
            serviceName: meow-00001
            serviceNamespace: default
            servicePort: 80
      visibility: ClusterLocal
    - hosts:
      - meow.default.example.com
      http:
        paths:
        - splits:
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: meow-00002
            percent: 50
            serviceName: meow-00002
            serviceNamespace: default
            servicePort: 80
          - appendHeaders:
              Knative-Serving-Namespace: default
              Knative-Serving-Revision: meow-00001
            percent: 50
            serviceName: meow-00001
            serviceNamespace: default
            servicePort: 80
      visibility: ExternalIP
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: LoadBalancerReady
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: NetworkConfigured
    - lastTransitionTime: "2024-04-25T02:33:49Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateLoadBalancer:
      ingress:
      - domainInternal: knative-local-gateway.istio-system.svc.cluster.local
    publicLoadBalancer:
      ingress:
      - domainInternal: istio-ingressgateway.istio-system.svc.cluster.local
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:34Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 1
    labels:
      app: hello-00001
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00001
      serving.knative.dev/revisionUID: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00001-cache-user-container
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: hello-00001
      uid: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
    resourceVersion: "1370"
    uid: 38ff1433-1761-4488-9799-f46b4530f843
  spec:
    image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:44Z"
    generation: 1
    labels:
      app: hello-00002
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00002
      serving.knative.dev/revisionUID: 84c3c345-5075-46be-ab84-cab82cdc1bfc
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00002-cache-user-container
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: hello-00002
      uid: 84c3c345-5075-46be-ab84-cab82cdc1bfc
    resourceVersion: "1602"
    uid: 1102b49c-ff35-4d13-a5c2-6e045283a72a
  spec:
    image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:42Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:43Z"
    generation: 1
    labels:
      app: meow-00001
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00001
      serving.knative.dev/revisionUID: ed476a06-50c2-4bdf-8480-21fd108b6183
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00001-cache-user-container
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: meow-00001
      uid: ed476a06-50c2-4bdf-8480-21fd108b6183
    resourceVersion: "1510"
    uid: fd93e064-2a1a-4483-94ef-991ae7bba36e
  spec:
    image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    annotations:
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:46Z"
    generation: 1
    labels:
      app: meow-00002
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00002
      serving.knative.dev/revisionUID: fb2aa138-98aa-43ca-ba3b-344bbea16db6
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00002-cache-user-container
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: meow-00002
      uid: fb2aa138-98aa-43ca-ba3b-344bbea16db6
    resourceVersion: "1697"
    uid: 8a59d578-0c13-4e25-bcf1-344b43981c2f
  spec:
    image: ghcr.io/knative/helloworld-go@sha256:f96c789e20bd20354e951161672a1132520df1389f6078d374658354c95d1b7c
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"caching.internal.knative.dev/v1alpha1","kind":"Image","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"queue-proxy","app.kubernetes.io/name":"knative-serving","app.kubernetes.io/version":"1.14.0"},"name":"queue-proxy","namespace":"knative-serving"},"spec":{"image":"gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:a2d67c5fba7f9f1c84329833be1a7b7d824b3d6f954c9efcb0ddb061cd00521c"}}
    creationTimestamp: "2024-04-25T02:33:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: queue-proxy
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: 1.14.0
    name: queue-proxy
    namespace: knative-serving
    resourceVersion: "977"
    uid: cd804be4-bcec-4910-ae67-fe274ea32f52
  spec:
    image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:a2d67c5fba7f9f1c84329833be1a7b7d824b3d6f954c9efcb0ddb061cd00521c
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: PodAutoscaler
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:34Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 3
    labels:
      app: hello-00001
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00001
      serving.knative.dev/revisionUID: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00001
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: hello-00001
      uid: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
    resourceVersion: "1807"
    uid: dc516a99-8488-458f-9dbe-7060eb530cbb
  spec:
    protocolType: http1
    reachability: Reachable
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: hello-00001-deployment
  status:
    actualScale: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: SKSReady
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: ScaleTargetInitialized
    desiredScale: 1
    metricsServiceName: hello-00001-private
    observedGeneration: 3
    serviceName: hello-00001
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: PodAutoscaler
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:44Z"
    generation: 1
    labels:
      app: hello-00002
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00002
      serving.knative.dev/revisionUID: 84c3c345-5075-46be-ab84-cab82cdc1bfc
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00002
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: hello-00002
      uid: 84c3c345-5075-46be-ab84-cab82cdc1bfc
    resourceVersion: "1756"
    uid: d69d1c4d-ee64-4b86-bd2b-b9b92be90269
  spec:
    protocolType: http1
    reachability: Reachable
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: hello-00002-deployment
  status:
    actualScale: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: SKSReady
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: ScaleTargetInitialized
    desiredScale: 1
    metricsServiceName: hello-00002-private
    observedGeneration: 1
    serviceName: hello-00002
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: PodAutoscaler
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:42Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:43Z"
    generation: 3
    labels:
      app: meow-00001
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00001
      serving.knative.dev/revisionUID: ed476a06-50c2-4bdf-8480-21fd108b6183
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00001
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: meow-00001
      uid: ed476a06-50c2-4bdf-8480-21fd108b6183
    resourceVersion: "1825"
    uid: 824df316-0f5d-4e0a-a76c-4826858b9e77
  spec:
    protocolType: http1
    reachability: Reachable
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: meow-00001-deployment
  status:
    actualScale: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: SKSReady
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: ScaleTargetInitialized
    desiredScale: 1
    metricsServiceName: meow-00001-private
    observedGeneration: 3
    serviceName: meow-00001
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: PodAutoscaler
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:46Z"
    generation: 1
    labels:
      app: meow-00002
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00002
      serving.knative.dev/revisionUID: fb2aa138-98aa-43ca-ba3b-344bbea16db6
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00002
    namespace: default
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: meow-00002
      uid: fb2aa138-98aa-43ca-ba3b-344bbea16db6
    resourceVersion: "1835"
    uid: d8737869-3292-429d-888c-6f3642dd6b58
  spec:
    protocolType: http1
    reachability: Reachable
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: meow-00002-deployment
  status:
    actualScale: 1
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: Active
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: Ready
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: SKSReady
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: ScaleTargetInitialized
    desiredScale: 1
    metricsServiceName: meow-00002-private
    observedGeneration: 1
    serviceName: meow-00002
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: Metric
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:34Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:35Z"
    generation: 1
    labels:
      app: hello-00001
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00001
      serving.knative.dev/revisionUID: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00001
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: hello-00001
      uid: dc516a99-8488-458f-9dbe-7060eb530cbb
    resourceVersion: "1401"
    uid: dbc74236-d4e0-4699-a039-94ed11c83223
  spec:
    panicWindow: 6000000000
    scrapeTarget: hello-00001-private
    stableWindow: 60000000000
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:35Z"
      status: "True"
      type: Ready
    observedGeneration: 1
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: Metric
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:44Z"
    generation: 1
    labels:
      app: hello-00002
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00002
      serving.knative.dev/revisionUID: 84c3c345-5075-46be-ab84-cab82cdc1bfc
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00002
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: hello-00002
      uid: d69d1c4d-ee64-4b86-bd2b-b9b92be90269
    resourceVersion: "1629"
    uid: 4178e2dc-da13-4aee-bb3f-b4b862b0d2ff
  spec:
    panicWindow: 6000000000
    scrapeTarget: hello-00002-private
    stableWindow: 60000000000
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:44Z"
      status: "True"
      type: Ready
    observedGeneration: 1
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: Metric
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:42Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:43Z"
    generation: 1
    labels:
      app: meow-00001
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00001
      serving.knative.dev/revisionUID: ed476a06-50c2-4bdf-8480-21fd108b6183
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00001
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: meow-00001
      uid: 824df316-0f5d-4e0a-a76c-4826858b9e77
    resourceVersion: "1537"
    uid: 93a6346c-040c-4802-8ad2-c3f121b2ddf7
  spec:
    panicWindow: 6000000000
    scrapeTarget: meow-00001-private
    stableWindow: 60000000000
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: Ready
    observedGeneration: 1
- apiVersion: autoscaling.internal.knative.dev/v1alpha1
  kind: Metric
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/metric: concurrency
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:46Z"
    generation: 1
    labels:
      app: meow-00002
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00002
      serving.knative.dev/revisionUID: fb2aa138-98aa-43ca-ba3b-344bbea16db6
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00002
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: meow-00002
      uid: d8737869-3292-429d-888c-6f3642dd6b58
    resourceVersion: "1724"
    uid: 72c21324-31cc-40e4-9670-ef99042ce104
  spec:
    panicWindow: 6000000000
    scrapeTarget: meow-00002-private
    stableWindow: 60000000000
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:46Z"
      status: "True"
      type: Ready
    observedGeneration: 1
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: ServerlessService
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:34Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:34Z"
    generation: 3
    labels:
      app: hello-00001
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00001
      serving.knative.dev/revisionUID: d28fc1f3-0ea7-446f-873f-f6cd9ec0c855
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00001
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: hello-00001
      uid: dc516a99-8488-458f-9dbe-7060eb530cbb
    resourceVersion: "1458"
    uid: ac509dcd-01e8-4bed-bf60-64c760b964d6
  spec:
    mode: Proxy
    numActivators: 4
    objectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: hello-00001-deployment
    protocolType: http1
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:35Z"
      message: Revision is backed by Activator
      reason: ActivatorEndpointsPopulated
      severity: Info
      status: "True"
      type: ActivatorEndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: EndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:41Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateServiceName: hello-00001-private
    serviceName: hello-00001
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: ServerlessService
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:44Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:44Z"
    generation: 3
    labels:
      app: hello-00002
      serving.knative.dev/configuration: hello
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 59876ead-5f2a-4f1a-8172-77b79495540f
      serving.knative.dev/revision: hello-00002
      serving.knative.dev/revisionUID: 84c3c345-5075-46be-ab84-cab82cdc1bfc
      serving.knative.dev/service: hello
      serving.knative.dev/serviceUID: a1203aa3-ce28-4edd-accd-04bcb7bd3026
    name: hello-00002
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: hello-00002
      uid: d69d1c4d-ee64-4b86-bd2b-b9b92be90269
    resourceVersion: "1668"
    uid: 9dae4e00-981f-494e-9f20-0e6569059822
  spec:
    mode: Proxy
    numActivators: 4
    objectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: hello-00002-deployment
    protocolType: http1
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:44Z"
      message: Revision is backed by Activator
      reason: ActivatorEndpointsPopulated
      severity: Info
      status: "True"
      type: ActivatorEndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: EndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:45Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateServiceName: hello-00002-private
    serviceName: hello-00002
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: ServerlessService
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:42Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:43Z"
    generation: 3
    labels:
      app: meow-00001
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00001
      serving.knative.dev/revisionUID: ed476a06-50c2-4bdf-8480-21fd108b6183
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00001
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: meow-00001
      uid: 824df316-0f5d-4e0a-a76c-4826858b9e77
    resourceVersion: "1566"
    uid: e5896bb7-2c95-463c-b661-4fa3e3299519
  spec:
    mode: Proxy
    numActivators: 4
    objectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: meow-00001-deployment
    protocolType: http1
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      message: Revision is backed by Activator
      reason: ActivatorEndpointsPopulated
      severity: Info
      status: "True"
      type: ActivatorEndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: EndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:43Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateServiceName: meow-00001-private
    serviceName: meow-00001
- apiVersion: networking.internal.knative.dev/v1alpha1
  kind: ServerlessService
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      client.knative.dev/updateTimestamp: "2024-04-25T02:33:46Z"
      client.knative.dev/user-image: ghcr.io/knative/helloworld-go:latest
      serving.knative.dev/creator: kubernetes-admin
    creationTimestamp: "2024-04-25T02:33:46Z"
    generation: 3
    labels:
      app: meow-00002
      serving.knative.dev/configuration: meow
      serving.knative.dev/configurationGeneration: "2"
      serving.knative.dev/configurationUID: 229ae768-9501-444e-92d5-f1fad7e16e72
      serving.knative.dev/revision: meow-00002
      serving.knative.dev/revisionUID: fb2aa138-98aa-43ca-ba3b-344bbea16db6
      serving.knative.dev/service: meow
      serving.knative.dev/serviceUID: 23339efe-6b14-4147-91cb-9c74b07cfd69
    name: meow-00002
    namespace: default
    ownerReferences:
    - apiVersion: autoscaling.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: PodAutoscaler
      name: meow-00002
      uid: d8737869-3292-429d-888c-6f3642dd6b58
    resourceVersion: "1770"
    uid: 776f0761-5f9d-4a52-8964-bef0e7e10589
  spec:
    mode: Proxy
    numActivators: 4
    objectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: meow-00002-deployment
    protocolType: http1
  status:
    conditions:
    - lastTransitionTime: "2024-04-25T02:33:46Z"
      message: Revision is backed by Activator
      reason: ActivatorEndpointsPopulated
      severity: Info
      status: "True"
      type: ActivatorEndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: EndpointsPopulated
    - lastTransitionTime: "2024-04-25T02:33:48Z"
      status: "True"
      type: Ready
    observedGeneration: 3
    privateServiceName: meow-00002-private
    serviceName: meow-00002
kind: List
metadata:
  resourceVersion: ""
---
